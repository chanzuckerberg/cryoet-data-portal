schema {
  query: query_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """refresh the cache entry"""
  refresh: Boolean! = false
) on QUERY

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

scalar _numeric

"""
Boolean expression to compare columns of type "_numeric". All fields are combined with logical 'AND'.
"""
input _numeric_comparison_exp {
  _eq: _numeric
  _gt: _numeric
  _gte: _numeric
  _in: [_numeric!]
  _is_null: Boolean
  _lt: _numeric
  _lte: _numeric
  _neq: _numeric
  _nin: [_numeric!]
}

"""Authors for an annotation"""
type annotation_authors {
  """Address of the institution an annotator is affiliated with."""
  affiliation_address: String

  """
  A unique identifier assigned to the affiliated institution by The Research Organization Registry (ROR).
  """
  affiliation_identifier: String

  """
  Name of the institution an annotator is affiliated with. Sometimes, one annotator may have multiple affiliations.
  """
  affiliation_name: String

  """An object relationship"""
  annotation: annotations!

  """Reference to the annotation this author contributed to"""
  annotation_id: Int!

  """The order in which the author appears in the publication"""
  author_list_order: Int

  """
  Indicating whether an annotator is the corresponding author (YES or NO)
  """
  corresponding_author_status: Boolean

  """Email address for this author"""
  email: String

  """Numeric identifier for this annotation author (this may change!)"""
  id: Int!

  """Full name of an annotation author (e.g. Jane Doe)."""
  name: String!

  """A unique, persistent identifier for researchers, provided by ORCID."""
  orcid: String

  """
  Indicating whether an annotator is the main person executing the annotation, especially on manual annotation (YES or NO)
  """
  primary_annotator_status: Boolean
  primary_author_status: Boolean
}

"""
aggregated selection of "annotation_authors"
"""
type annotation_authors_aggregate {
  aggregate: annotation_authors_aggregate_fields
  nodes: [annotation_authors!]!
}

input annotation_authors_aggregate_bool_exp {
  bool_and: annotation_authors_aggregate_bool_exp_bool_and
  bool_or: annotation_authors_aggregate_bool_exp_bool_or
  count: annotation_authors_aggregate_bool_exp_count
}

input annotation_authors_aggregate_bool_exp_bool_and {
  arguments: annotation_authors_select_column_annotation_authors_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: annotation_authors_bool_exp
  predicate: Boolean_comparison_exp!
}

input annotation_authors_aggregate_bool_exp_bool_or {
  arguments: annotation_authors_select_column_annotation_authors_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: annotation_authors_bool_exp
  predicate: Boolean_comparison_exp!
}

input annotation_authors_aggregate_bool_exp_count {
  arguments: [annotation_authors_select_column!]
  distinct: Boolean
  filter: annotation_authors_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "annotation_authors"
"""
type annotation_authors_aggregate_fields {
  avg: annotation_authors_avg_fields
  count(columns: [annotation_authors_select_column!], distinct: Boolean): Int!
  max: annotation_authors_max_fields
  min: annotation_authors_min_fields
  stddev: annotation_authors_stddev_fields
  stddev_pop: annotation_authors_stddev_pop_fields
  stddev_samp: annotation_authors_stddev_samp_fields
  sum: annotation_authors_sum_fields
  var_pop: annotation_authors_var_pop_fields
  var_samp: annotation_authors_var_samp_fields
  variance: annotation_authors_variance_fields
}

"""
order by aggregate values of table "annotation_authors"
"""
input annotation_authors_aggregate_order_by {
  avg: annotation_authors_avg_order_by
  count: order_by
  max: annotation_authors_max_order_by
  min: annotation_authors_min_order_by
  stddev: annotation_authors_stddev_order_by
  stddev_pop: annotation_authors_stddev_pop_order_by
  stddev_samp: annotation_authors_stddev_samp_order_by
  sum: annotation_authors_sum_order_by
  var_pop: annotation_authors_var_pop_order_by
  var_samp: annotation_authors_var_samp_order_by
  variance: annotation_authors_variance_order_by
}

"""aggregate avg on columns"""
type annotation_authors_avg_fields {
  """Reference to the annotation this author contributed to"""
  annotation_id: Float

  """The order in which the author appears in the publication"""
  author_list_order: Float

  """Numeric identifier for this annotation author (this may change!)"""
  id: Float
}

"""
order by avg() on columns of table "annotation_authors"
"""
input annotation_authors_avg_order_by {
  """Reference to the annotation this author contributed to"""
  annotation_id: order_by

  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Numeric identifier for this annotation author (this may change!)"""
  id: order_by
}

"""
Boolean expression to filter rows from the table "annotation_authors". All fields are combined with a logical 'AND'.
"""
input annotation_authors_bool_exp {
  _and: [annotation_authors_bool_exp!]
  _not: annotation_authors_bool_exp
  _or: [annotation_authors_bool_exp!]
  affiliation_address: String_comparison_exp
  affiliation_identifier: String_comparison_exp
  affiliation_name: String_comparison_exp
  annotation: annotations_bool_exp
  annotation_id: Int_comparison_exp
  author_list_order: Int_comparison_exp
  corresponding_author_status: Boolean_comparison_exp
  email: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  orcid: String_comparison_exp
  primary_annotator_status: Boolean_comparison_exp
  primary_author_status: Boolean_comparison_exp
}

"""aggregate max on columns"""
type annotation_authors_max_fields {
  """Address of the institution an annotator is affiliated with."""
  affiliation_address: String

  """
  A unique identifier assigned to the affiliated institution by The Research Organization Registry (ROR).
  """
  affiliation_identifier: String

  """
  Name of the institution an annotator is affiliated with. Sometimes, one annotator may have multiple affiliations.
  """
  affiliation_name: String

  """Reference to the annotation this author contributed to"""
  annotation_id: Int

  """The order in which the author appears in the publication"""
  author_list_order: Int

  """Email address for this author"""
  email: String

  """Numeric identifier for this annotation author (this may change!)"""
  id: Int

  """Full name of an annotation author (e.g. Jane Doe)."""
  name: String

  """A unique, persistent identifier for researchers, provided by ORCID."""
  orcid: String
}

"""
order by max() on columns of table "annotation_authors"
"""
input annotation_authors_max_order_by {
  """Address of the institution an annotator is affiliated with."""
  affiliation_address: order_by

  """
  A unique identifier assigned to the affiliated institution by The Research Organization Registry (ROR).
  """
  affiliation_identifier: order_by

  """
  Name of the institution an annotator is affiliated with. Sometimes, one annotator may have multiple affiliations.
  """
  affiliation_name: order_by

  """Reference to the annotation this author contributed to"""
  annotation_id: order_by

  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Email address for this author"""
  email: order_by

  """Numeric identifier for this annotation author (this may change!)"""
  id: order_by

  """Full name of an annotation author (e.g. Jane Doe)."""
  name: order_by

  """A unique, persistent identifier for researchers, provided by ORCID."""
  orcid: order_by
}

"""aggregate min on columns"""
type annotation_authors_min_fields {
  """Address of the institution an annotator is affiliated with."""
  affiliation_address: String

  """
  A unique identifier assigned to the affiliated institution by The Research Organization Registry (ROR).
  """
  affiliation_identifier: String

  """
  Name of the institution an annotator is affiliated with. Sometimes, one annotator may have multiple affiliations.
  """
  affiliation_name: String

  """Reference to the annotation this author contributed to"""
  annotation_id: Int

  """The order in which the author appears in the publication"""
  author_list_order: Int

  """Email address for this author"""
  email: String

  """Numeric identifier for this annotation author (this may change!)"""
  id: Int

  """Full name of an annotation author (e.g. Jane Doe)."""
  name: String

  """A unique, persistent identifier for researchers, provided by ORCID."""
  orcid: String
}

"""
order by min() on columns of table "annotation_authors"
"""
input annotation_authors_min_order_by {
  """Address of the institution an annotator is affiliated with."""
  affiliation_address: order_by

  """
  A unique identifier assigned to the affiliated institution by The Research Organization Registry (ROR).
  """
  affiliation_identifier: order_by

  """
  Name of the institution an annotator is affiliated with. Sometimes, one annotator may have multiple affiliations.
  """
  affiliation_name: order_by

  """Reference to the annotation this author contributed to"""
  annotation_id: order_by

  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Email address for this author"""
  email: order_by

  """Numeric identifier for this annotation author (this may change!)"""
  id: order_by

  """Full name of an annotation author (e.g. Jane Doe)."""
  name: order_by

  """A unique, persistent identifier for researchers, provided by ORCID."""
  orcid: order_by
}

"""Ordering options when selecting data from "annotation_authors"."""
input annotation_authors_order_by {
  affiliation_address: order_by
  affiliation_identifier: order_by
  affiliation_name: order_by
  annotation: annotations_order_by
  annotation_id: order_by
  author_list_order: order_by
  corresponding_author_status: order_by
  email: order_by
  id: order_by
  name: order_by
  orcid: order_by
  primary_annotator_status: order_by
  primary_author_status: order_by
}

"""
select columns of table "annotation_authors"
"""
enum annotation_authors_select_column {
  """column name"""
  affiliation_address

  """column name"""
  affiliation_identifier

  """column name"""
  affiliation_name

  """column name"""
  annotation_id

  """column name"""
  author_list_order

  """column name"""
  corresponding_author_status

  """column name"""
  email

  """column name"""
  id

  """column name"""
  name

  """column name"""
  orcid

  """column name"""
  primary_annotator_status

  """column name"""
  primary_author_status
}

"""
select "annotation_authors_aggregate_bool_exp_bool_and_arguments_columns" columns of table "annotation_authors"
"""
enum annotation_authors_select_column_annotation_authors_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  corresponding_author_status

  """column name"""
  primary_annotator_status

  """column name"""
  primary_author_status
}

"""
select "annotation_authors_aggregate_bool_exp_bool_or_arguments_columns" columns of table "annotation_authors"
"""
enum annotation_authors_select_column_annotation_authors_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  corresponding_author_status

  """column name"""
  primary_annotator_status

  """column name"""
  primary_author_status
}

"""aggregate stddev on columns"""
type annotation_authors_stddev_fields {
  """Reference to the annotation this author contributed to"""
  annotation_id: Float

  """The order in which the author appears in the publication"""
  author_list_order: Float

  """Numeric identifier for this annotation author (this may change!)"""
  id: Float
}

"""
order by stddev() on columns of table "annotation_authors"
"""
input annotation_authors_stddev_order_by {
  """Reference to the annotation this author contributed to"""
  annotation_id: order_by

  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Numeric identifier for this annotation author (this may change!)"""
  id: order_by
}

"""aggregate stddev_pop on columns"""
type annotation_authors_stddev_pop_fields {
  """Reference to the annotation this author contributed to"""
  annotation_id: Float

  """The order in which the author appears in the publication"""
  author_list_order: Float

  """Numeric identifier for this annotation author (this may change!)"""
  id: Float
}

"""
order by stddev_pop() on columns of table "annotation_authors"
"""
input annotation_authors_stddev_pop_order_by {
  """Reference to the annotation this author contributed to"""
  annotation_id: order_by

  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Numeric identifier for this annotation author (this may change!)"""
  id: order_by
}

"""aggregate stddev_samp on columns"""
type annotation_authors_stddev_samp_fields {
  """Reference to the annotation this author contributed to"""
  annotation_id: Float

  """The order in which the author appears in the publication"""
  author_list_order: Float

  """Numeric identifier for this annotation author (this may change!)"""
  id: Float
}

"""
order by stddev_samp() on columns of table "annotation_authors"
"""
input annotation_authors_stddev_samp_order_by {
  """Reference to the annotation this author contributed to"""
  annotation_id: order_by

  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Numeric identifier for this annotation author (this may change!)"""
  id: order_by
}

"""aggregate sum on columns"""
type annotation_authors_sum_fields {
  """Reference to the annotation this author contributed to"""
  annotation_id: Int

  """The order in which the author appears in the publication"""
  author_list_order: Int

  """Numeric identifier for this annotation author (this may change!)"""
  id: Int
}

"""
order by sum() on columns of table "annotation_authors"
"""
input annotation_authors_sum_order_by {
  """Reference to the annotation this author contributed to"""
  annotation_id: order_by

  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Numeric identifier for this annotation author (this may change!)"""
  id: order_by
}

"""aggregate var_pop on columns"""
type annotation_authors_var_pop_fields {
  """Reference to the annotation this author contributed to"""
  annotation_id: Float

  """The order in which the author appears in the publication"""
  author_list_order: Float

  """Numeric identifier for this annotation author (this may change!)"""
  id: Float
}

"""
order by var_pop() on columns of table "annotation_authors"
"""
input annotation_authors_var_pop_order_by {
  """Reference to the annotation this author contributed to"""
  annotation_id: order_by

  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Numeric identifier for this annotation author (this may change!)"""
  id: order_by
}

"""aggregate var_samp on columns"""
type annotation_authors_var_samp_fields {
  """Reference to the annotation this author contributed to"""
  annotation_id: Float

  """The order in which the author appears in the publication"""
  author_list_order: Float

  """Numeric identifier for this annotation author (this may change!)"""
  id: Float
}

"""
order by var_samp() on columns of table "annotation_authors"
"""
input annotation_authors_var_samp_order_by {
  """Reference to the annotation this author contributed to"""
  annotation_id: order_by

  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Numeric identifier for this annotation author (this may change!)"""
  id: order_by
}

"""aggregate variance on columns"""
type annotation_authors_variance_fields {
  """Reference to the annotation this author contributed to"""
  annotation_id: Float

  """The order in which the author appears in the publication"""
  author_list_order: Float

  """Numeric identifier for this annotation author (this may change!)"""
  id: Float
}

"""
order by variance() on columns of table "annotation_authors"
"""
input annotation_authors_variance_order_by {
  """Reference to the annotation this author contributed to"""
  annotation_id: order_by

  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Numeric identifier for this annotation author (this may change!)"""
  id: order_by
}

"""Information about associated files for a given annotation"""
type annotation_files {
  """An object relationship"""
  annotation: annotations!
  annotation_id: Int!

  """Format of the annotation object file"""
  format: String!

  """https path of the annotation file"""
  https_path: String!
  id: Int!

  """
  Data curator’s subjective choice of default annotation to display in visualization for an object
  """
  is_visualization_default: Boolean

  """s3 path of the annotation file"""
  s3_path: String!

  """The type of the annotation"""
  shape_type: String!
}

"""
aggregated selection of "annotation_files"
"""
type annotation_files_aggregate {
  aggregate: annotation_files_aggregate_fields
  nodes: [annotation_files!]!
}

input annotation_files_aggregate_bool_exp {
  bool_and: annotation_files_aggregate_bool_exp_bool_and
  bool_or: annotation_files_aggregate_bool_exp_bool_or
  count: annotation_files_aggregate_bool_exp_count
}

input annotation_files_aggregate_bool_exp_bool_and {
  arguments: annotation_files_select_column_annotation_files_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: annotation_files_bool_exp
  predicate: Boolean_comparison_exp!
}

input annotation_files_aggregate_bool_exp_bool_or {
  arguments: annotation_files_select_column_annotation_files_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: annotation_files_bool_exp
  predicate: Boolean_comparison_exp!
}

input annotation_files_aggregate_bool_exp_count {
  arguments: [annotation_files_select_column!]
  distinct: Boolean
  filter: annotation_files_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "annotation_files"
"""
type annotation_files_aggregate_fields {
  avg: annotation_files_avg_fields
  count(columns: [annotation_files_select_column!], distinct: Boolean): Int!
  max: annotation_files_max_fields
  min: annotation_files_min_fields
  stddev: annotation_files_stddev_fields
  stddev_pop: annotation_files_stddev_pop_fields
  stddev_samp: annotation_files_stddev_samp_fields
  sum: annotation_files_sum_fields
  var_pop: annotation_files_var_pop_fields
  var_samp: annotation_files_var_samp_fields
  variance: annotation_files_variance_fields
}

"""
order by aggregate values of table "annotation_files"
"""
input annotation_files_aggregate_order_by {
  avg: annotation_files_avg_order_by
  count: order_by
  max: annotation_files_max_order_by
  min: annotation_files_min_order_by
  stddev: annotation_files_stddev_order_by
  stddev_pop: annotation_files_stddev_pop_order_by
  stddev_samp: annotation_files_stddev_samp_order_by
  sum: annotation_files_sum_order_by
  var_pop: annotation_files_var_pop_order_by
  var_samp: annotation_files_var_samp_order_by
  variance: annotation_files_variance_order_by
}

"""aggregate avg on columns"""
type annotation_files_avg_fields {
  annotation_id: Float
  id: Float
}

"""
order by avg() on columns of table "annotation_files"
"""
input annotation_files_avg_order_by {
  annotation_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "annotation_files". All fields are combined with a logical 'AND'.
"""
input annotation_files_bool_exp {
  _and: [annotation_files_bool_exp!]
  _not: annotation_files_bool_exp
  _or: [annotation_files_bool_exp!]
  annotation: annotations_bool_exp
  annotation_id: Int_comparison_exp
  format: String_comparison_exp
  https_path: String_comparison_exp
  id: Int_comparison_exp
  is_visualization_default: Boolean_comparison_exp
  s3_path: String_comparison_exp
  shape_type: String_comparison_exp
}

"""aggregate max on columns"""
type annotation_files_max_fields {
  annotation_id: Int

  """Format of the annotation object file"""
  format: String

  """https path of the annotation file"""
  https_path: String
  id: Int

  """s3 path of the annotation file"""
  s3_path: String

  """The type of the annotation"""
  shape_type: String
}

"""
order by max() on columns of table "annotation_files"
"""
input annotation_files_max_order_by {
  annotation_id: order_by

  """Format of the annotation object file"""
  format: order_by

  """https path of the annotation file"""
  https_path: order_by
  id: order_by

  """s3 path of the annotation file"""
  s3_path: order_by

  """The type of the annotation"""
  shape_type: order_by
}

"""aggregate min on columns"""
type annotation_files_min_fields {
  annotation_id: Int

  """Format of the annotation object file"""
  format: String

  """https path of the annotation file"""
  https_path: String
  id: Int

  """s3 path of the annotation file"""
  s3_path: String

  """The type of the annotation"""
  shape_type: String
}

"""
order by min() on columns of table "annotation_files"
"""
input annotation_files_min_order_by {
  annotation_id: order_by

  """Format of the annotation object file"""
  format: order_by

  """https path of the annotation file"""
  https_path: order_by
  id: order_by

  """s3 path of the annotation file"""
  s3_path: order_by

  """The type of the annotation"""
  shape_type: order_by
}

"""Ordering options when selecting data from "annotation_files"."""
input annotation_files_order_by {
  annotation: annotations_order_by
  annotation_id: order_by
  format: order_by
  https_path: order_by
  id: order_by
  is_visualization_default: order_by
  s3_path: order_by
  shape_type: order_by
}

"""
select columns of table "annotation_files"
"""
enum annotation_files_select_column {
  """column name"""
  annotation_id

  """column name"""
  format

  """column name"""
  https_path

  """column name"""
  id

  """column name"""
  is_visualization_default

  """column name"""
  s3_path

  """column name"""
  shape_type
}

"""
select "annotation_files_aggregate_bool_exp_bool_and_arguments_columns" columns of table "annotation_files"
"""
enum annotation_files_select_column_annotation_files_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  is_visualization_default
}

"""
select "annotation_files_aggregate_bool_exp_bool_or_arguments_columns" columns of table "annotation_files"
"""
enum annotation_files_select_column_annotation_files_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  is_visualization_default
}

"""aggregate stddev on columns"""
type annotation_files_stddev_fields {
  annotation_id: Float
  id: Float
}

"""
order by stddev() on columns of table "annotation_files"
"""
input annotation_files_stddev_order_by {
  annotation_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type annotation_files_stddev_pop_fields {
  annotation_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "annotation_files"
"""
input annotation_files_stddev_pop_order_by {
  annotation_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type annotation_files_stddev_samp_fields {
  annotation_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "annotation_files"
"""
input annotation_files_stddev_samp_order_by {
  annotation_id: order_by
  id: order_by
}

"""
Streaming cursor of the table "annotation_files"
"""
input annotation_files_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: annotation_files_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input annotation_files_stream_cursor_value_input {
  annotation_id: Int

  """Format of the annotation object file"""
  format: String

  """https path of the annotation file"""
  https_path: String
  id: Int

  """
  Data curator’s subjective choice of default annotation to display in visualization for an object
  """
  is_visualization_default: Boolean

  """s3 path of the annotation file"""
  s3_path: String

  """The type of the annotation"""
  shape_type: String
}

"""aggregate sum on columns"""
type annotation_files_sum_fields {
  annotation_id: Int
  id: Int
}

"""
order by sum() on columns of table "annotation_files"
"""
input annotation_files_sum_order_by {
  annotation_id: order_by
  id: order_by
}

"""aggregate var_pop on columns"""
type annotation_files_var_pop_fields {
  annotation_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "annotation_files"
"""
input annotation_files_var_pop_order_by {
  annotation_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type annotation_files_var_samp_fields {
  annotation_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "annotation_files"
"""
input annotation_files_var_samp_order_by {
  annotation_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type annotation_files_variance_fields {
  annotation_id: Float
  id: Float
}

"""
order by variance() on columns of table "annotation_files"
"""
input annotation_files_variance_order_by {
  annotation_id: order_by
  id: order_by
}

"""Inoformation about annotations for a given run"""
type annotations {
  """
  Describe how the annotation is made (e.g. Manual, crYoLO, Positive Unlabeled Learning, template matching)
  """
  annotation_method: String!

  """
  DOIs for publications that describe the dataset. Use a comma to separate multiple DOIs.
  """
  annotation_publication: String
  annotation_software: String

  """An array relationship"""
  authors(
    """distinct select on columns"""
    distinct_on: [annotation_authors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotation_authors_order_by!]

    """filter the rows returned"""
    where: annotation_authors_bool_exp
  ): [annotation_authors!]!

  """An aggregate relationship"""
  authors_aggregate(
    """distinct select on columns"""
    distinct_on: [annotation_authors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotation_authors_order_by!]

    """filter the rows returned"""
    where: annotation_authors_bool_exp
  ): annotation_authors_aggregate!

  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: numeric

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: numeric

  """Date when an annotation set is initially received by the Data Portal."""
  deposition_date: date!

  """id of the associated deposition."""
  deposition_id: Int

  """An array relationship"""
  files(
    """distinct select on columns"""
    distinct_on: [annotation_files_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotation_files_order_by!]

    """filter the rows returned"""
    where: annotation_files_bool_exp
  ): [annotation_files!]!

  """An aggregate relationship"""
  files_aggregate(
    """distinct select on columns"""
    distinct_on: [annotation_files_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotation_files_order_by!]

    """filter the rows returned"""
    where: annotation_files_bool_exp
  ): annotation_files_aggregate!

  """
  Whether an annotation is considered ground truth, as determined by the annotator.
  """
  ground_truth_status: Boolean!

  """Annotation filename used as ground truth for precision and recall"""
  ground_truth_used: String

  """https path for the metadata json file for this annotation"""
  https_metadata_path: String!

  """Numeric identifier (May change!)"""
  id: Int!

  """
  Data curator’s subjective choice as the best annotation of the same annotation object ID
  """
  is_curator_recommended: Boolean

  """Date when an annotation was last modified in the Data Portal"""
  last_modified_date: date

  """Provides information on the method type used for generating annotation"""
  method_type: String

  """Number of objects identified"""
  object_count: Int!

  """
  A textual description of the annotation object, can be a longer description to include additional information not covered by the Annotation object name and state.
  """
  object_description: String

  """Gene Ontology Cellular Component identifier for the annotation object"""
  object_id: String!

  """
  Name of the object being annotated (e.g. ribosome, nuclear pore complex, actin filament, membrane)
  """
  object_name: String!

  """Molecule state annotated (e.g. open, closed)"""
  object_state: String

  """Date when annotation data is made public by the Data Portal."""
  release_date: date!

  """s3 path for the metadata json file for this annotation"""
  s3_metadata_path: String!

  """An object relationship"""
  tomogram_voxel_spacing: tomogram_voxel_spacings
  tomogram_voxel_spacing_id: Int
}

"""
aggregated selection of "annotations"
"""
type annotations_aggregate {
  aggregate: annotations_aggregate_fields
  nodes: [annotations!]!
}

input annotations_aggregate_bool_exp {
  bool_and: annotations_aggregate_bool_exp_bool_and
  bool_or: annotations_aggregate_bool_exp_bool_or
  count: annotations_aggregate_bool_exp_count
}

input annotations_aggregate_bool_exp_bool_and {
  arguments: annotations_select_column_annotations_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: annotations_bool_exp
  predicate: Boolean_comparison_exp!
}

input annotations_aggregate_bool_exp_bool_or {
  arguments: annotations_select_column_annotations_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: annotations_bool_exp
  predicate: Boolean_comparison_exp!
}

input annotations_aggregate_bool_exp_count {
  arguments: [annotations_select_column!]
  distinct: Boolean
  filter: annotations_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "annotations"
"""
type annotations_aggregate_fields {
  avg: annotations_avg_fields
  count(columns: [annotations_select_column!], distinct: Boolean): Int!
  max: annotations_max_fields
  min: annotations_min_fields
  stddev: annotations_stddev_fields
  stddev_pop: annotations_stddev_pop_fields
  stddev_samp: annotations_stddev_samp_fields
  sum: annotations_sum_fields
  var_pop: annotations_var_pop_fields
  var_samp: annotations_var_samp_fields
  variance: annotations_variance_fields
}

"""
order by aggregate values of table "annotations"
"""
input annotations_aggregate_order_by {
  avg: annotations_avg_order_by
  count: order_by
  max: annotations_max_order_by
  min: annotations_min_order_by
  stddev: annotations_stddev_order_by
  stddev_pop: annotations_stddev_pop_order_by
  stddev_samp: annotations_stddev_samp_order_by
  sum: annotations_sum_order_by
  var_pop: annotations_var_pop_order_by
  var_samp: annotations_var_samp_order_by
  variance: annotations_variance_order_by
}

"""aggregate avg on columns"""
type annotations_avg_fields {
  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: Float

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: Float

  """id of the associated deposition."""
  deposition_id: Float

  """Numeric identifier (May change!)"""
  id: Float

  """Number of objects identified"""
  object_count: Float
  tomogram_voxel_spacing_id: Float
}

"""
order by avg() on columns of table "annotations"
"""
input annotations_avg_order_by {
  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: order_by

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: order_by

  """id of the associated deposition."""
  deposition_id: order_by

  """Numeric identifier (May change!)"""
  id: order_by

  """Number of objects identified"""
  object_count: order_by
  tomogram_voxel_spacing_id: order_by
}

"""
Boolean expression to filter rows from the table "annotations". All fields are combined with a logical 'AND'.
"""
input annotations_bool_exp {
  _and: [annotations_bool_exp!]
  _not: annotations_bool_exp
  _or: [annotations_bool_exp!]
  annotation_method: String_comparison_exp
  annotation_publication: String_comparison_exp
  annotation_software: String_comparison_exp
  authors: annotation_authors_bool_exp
  authors_aggregate: annotation_authors_aggregate_bool_exp
  confidence_precision: numeric_comparison_exp
  confidence_recall: numeric_comparison_exp
  deposition_date: date_comparison_exp
  deposition_id: Int_comparison_exp
  files: annotation_files_bool_exp
  files_aggregate: annotation_files_aggregate_bool_exp
  ground_truth_status: Boolean_comparison_exp
  ground_truth_used: String_comparison_exp
  https_metadata_path: String_comparison_exp
  id: Int_comparison_exp
  is_curator_recommended: Boolean_comparison_exp
  last_modified_date: date_comparison_exp
  method_type: String_comparison_exp
  object_count: Int_comparison_exp
  object_description: String_comparison_exp
  object_id: String_comparison_exp
  object_name: String_comparison_exp
  object_state: String_comparison_exp
  release_date: date_comparison_exp
  s3_metadata_path: String_comparison_exp
  tomogram_voxel_spacing: tomogram_voxel_spacings_bool_exp
  tomogram_voxel_spacing_id: Int_comparison_exp
}

"""aggregate max on columns"""
type annotations_max_fields {
  """
  Describe how the annotation is made (e.g. Manual, crYoLO, Positive Unlabeled Learning, template matching)
  """
  annotation_method: String

  """
  DOIs for publications that describe the dataset. Use a comma to separate multiple DOIs.
  """
  annotation_publication: String
  annotation_software: String

  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: numeric

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: numeric

  """Date when an annotation set is initially received by the Data Portal."""
  deposition_date: date

  """id of the associated deposition."""
  deposition_id: Int

  """Annotation filename used as ground truth for precision and recall"""
  ground_truth_used: String

  """https path for the metadata json file for this annotation"""
  https_metadata_path: String

  """Numeric identifier (May change!)"""
  id: Int

  """Date when an annotation was last modified in the Data Portal"""
  last_modified_date: date

  """Provides information on the method type used for generating annotation"""
  method_type: String

  """Number of objects identified"""
  object_count: Int

  """
  A textual description of the annotation object, can be a longer description to include additional information not covered by the Annotation object name and state.
  """
  object_description: String

  """Gene Ontology Cellular Component identifier for the annotation object"""
  object_id: String

  """
  Name of the object being annotated (e.g. ribosome, nuclear pore complex, actin filament, membrane)
  """
  object_name: String

  """Molecule state annotated (e.g. open, closed)"""
  object_state: String

  """Date when annotation data is made public by the Data Portal."""
  release_date: date

  """s3 path for the metadata json file for this annotation"""
  s3_metadata_path: String
  tomogram_voxel_spacing_id: Int
}

"""
order by max() on columns of table "annotations"
"""
input annotations_max_order_by {
  """
  Describe how the annotation is made (e.g. Manual, crYoLO, Positive Unlabeled Learning, template matching)
  """
  annotation_method: order_by

  """
  DOIs for publications that describe the dataset. Use a comma to separate multiple DOIs.
  """
  annotation_publication: order_by
  annotation_software: order_by

  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: order_by

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: order_by

  """Date when an annotation set is initially received by the Data Portal."""
  deposition_date: order_by

  """id of the associated deposition."""
  deposition_id: order_by

  """Annotation filename used as ground truth for precision and recall"""
  ground_truth_used: order_by

  """https path for the metadata json file for this annotation"""
  https_metadata_path: order_by

  """Numeric identifier (May change!)"""
  id: order_by

  """Date when an annotation was last modified in the Data Portal"""
  last_modified_date: order_by

  """Provides information on the method type used for generating annotation"""
  method_type: order_by

  """Number of objects identified"""
  object_count: order_by

  """
  A textual description of the annotation object, can be a longer description to include additional information not covered by the Annotation object name and state.
  """
  object_description: order_by

  """Gene Ontology Cellular Component identifier for the annotation object"""
  object_id: order_by

  """
  Name of the object being annotated (e.g. ribosome, nuclear pore complex, actin filament, membrane)
  """
  object_name: order_by

  """Molecule state annotated (e.g. open, closed)"""
  object_state: order_by

  """Date when annotation data is made public by the Data Portal."""
  release_date: order_by

  """s3 path for the metadata json file for this annotation"""
  s3_metadata_path: order_by
  tomogram_voxel_spacing_id: order_by
}

"""aggregate min on columns"""
type annotations_min_fields {
  """
  Describe how the annotation is made (e.g. Manual, crYoLO, Positive Unlabeled Learning, template matching)
  """
  annotation_method: String

  """
  DOIs for publications that describe the dataset. Use a comma to separate multiple DOIs.
  """
  annotation_publication: String
  annotation_software: String

  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: numeric

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: numeric

  """Date when an annotation set is initially received by the Data Portal."""
  deposition_date: date

  """id of the associated deposition."""
  deposition_id: Int

  """Annotation filename used as ground truth for precision and recall"""
  ground_truth_used: String

  """https path for the metadata json file for this annotation"""
  https_metadata_path: String

  """Numeric identifier (May change!)"""
  id: Int

  """Date when an annotation was last modified in the Data Portal"""
  last_modified_date: date

  """Provides information on the method type used for generating annotation"""
  method_type: String

  """Number of objects identified"""
  object_count: Int

  """
  A textual description of the annotation object, can be a longer description to include additional information not covered by the Annotation object name and state.
  """
  object_description: String

  """Gene Ontology Cellular Component identifier for the annotation object"""
  object_id: String

  """
  Name of the object being annotated (e.g. ribosome, nuclear pore complex, actin filament, membrane)
  """
  object_name: String

  """Molecule state annotated (e.g. open, closed)"""
  object_state: String

  """Date when annotation data is made public by the Data Portal."""
  release_date: date

  """s3 path for the metadata json file for this annotation"""
  s3_metadata_path: String
  tomogram_voxel_spacing_id: Int
}

"""
order by min() on columns of table "annotations"
"""
input annotations_min_order_by {
  """
  Describe how the annotation is made (e.g. Manual, crYoLO, Positive Unlabeled Learning, template matching)
  """
  annotation_method: order_by

  """
  DOIs for publications that describe the dataset. Use a comma to separate multiple DOIs.
  """
  annotation_publication: order_by
  annotation_software: order_by

  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: order_by

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: order_by

  """Date when an annotation set is initially received by the Data Portal."""
  deposition_date: order_by

  """id of the associated deposition."""
  deposition_id: order_by

  """Annotation filename used as ground truth for precision and recall"""
  ground_truth_used: order_by

  """https path for the metadata json file for this annotation"""
  https_metadata_path: order_by

  """Numeric identifier (May change!)"""
  id: order_by

  """Date when an annotation was last modified in the Data Portal"""
  last_modified_date: order_by

  """Provides information on the method type used for generating annotation"""
  method_type: order_by

  """Number of objects identified"""
  object_count: order_by

  """
  A textual description of the annotation object, can be a longer description to include additional information not covered by the Annotation object name and state.
  """
  object_description: order_by

  """Gene Ontology Cellular Component identifier for the annotation object"""
  object_id: order_by

  """
  Name of the object being annotated (e.g. ribosome, nuclear pore complex, actin filament, membrane)
  """
  object_name: order_by

  """Molecule state annotated (e.g. open, closed)"""
  object_state: order_by

  """Date when annotation data is made public by the Data Portal."""
  release_date: order_by

  """s3 path for the metadata json file for this annotation"""
  s3_metadata_path: order_by
  tomogram_voxel_spacing_id: order_by
}

"""Ordering options when selecting data from "annotations"."""
input annotations_order_by {
  annotation_method: order_by
  annotation_publication: order_by
  annotation_software: order_by
  authors_aggregate: annotation_authors_aggregate_order_by
  confidence_precision: order_by
  confidence_recall: order_by
  deposition_date: order_by
  deposition_id: order_by
  files_aggregate: annotation_files_aggregate_order_by
  ground_truth_status: order_by
  ground_truth_used: order_by
  https_metadata_path: order_by
  id: order_by
  is_curator_recommended: order_by
  last_modified_date: order_by
  method_type: order_by
  object_count: order_by
  object_description: order_by
  object_id: order_by
  object_name: order_by
  object_state: order_by
  release_date: order_by
  s3_metadata_path: order_by
  tomogram_voxel_spacing: tomogram_voxel_spacings_order_by
  tomogram_voxel_spacing_id: order_by
}

"""
select columns of table "annotations"
"""
enum annotations_select_column {
  """column name"""
  annotation_method

  """column name"""
  annotation_publication

  """column name"""
  annotation_software

  """column name"""
  confidence_precision

  """column name"""
  confidence_recall

  """column name"""
  deposition_date

  """column name"""
  deposition_id

  """column name"""
  ground_truth_status

  """column name"""
  ground_truth_used

  """column name"""
  https_metadata_path

  """column name"""
  id

  """column name"""
  is_curator_recommended

  """column name"""
  last_modified_date

  """column name"""
  method_type

  """column name"""
  object_count

  """column name"""
  object_description

  """column name"""
  object_id

  """column name"""
  object_name

  """column name"""
  object_state

  """column name"""
  release_date

  """column name"""
  s3_metadata_path

  """column name"""
  tomogram_voxel_spacing_id
}

"""
select "annotations_aggregate_bool_exp_bool_and_arguments_columns" columns of table "annotations"
"""
enum annotations_select_column_annotations_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  ground_truth_status

  """column name"""
  is_curator_recommended
}

"""
select "annotations_aggregate_bool_exp_bool_or_arguments_columns" columns of table "annotations"
"""
enum annotations_select_column_annotations_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  ground_truth_status

  """column name"""
  is_curator_recommended
}

"""aggregate stddev on columns"""
type annotations_stddev_fields {
  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: Float

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: Float

  """id of the associated deposition."""
  deposition_id: Float

  """Numeric identifier (May change!)"""
  id: Float

  """Number of objects identified"""
  object_count: Float
  tomogram_voxel_spacing_id: Float
}

"""
order by stddev() on columns of table "annotations"
"""
input annotations_stddev_order_by {
  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: order_by

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: order_by

  """id of the associated deposition."""
  deposition_id: order_by

  """Numeric identifier (May change!)"""
  id: order_by

  """Number of objects identified"""
  object_count: order_by
  tomogram_voxel_spacing_id: order_by
}

"""aggregate stddev_pop on columns"""
type annotations_stddev_pop_fields {
  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: Float

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: Float

  """id of the associated deposition."""
  deposition_id: Float

  """Numeric identifier (May change!)"""
  id: Float

  """Number of objects identified"""
  object_count: Float
  tomogram_voxel_spacing_id: Float
}

"""
order by stddev_pop() on columns of table "annotations"
"""
input annotations_stddev_pop_order_by {
  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: order_by

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: order_by

  """id of the associated deposition."""
  deposition_id: order_by

  """Numeric identifier (May change!)"""
  id: order_by

  """Number of objects identified"""
  object_count: order_by
  tomogram_voxel_spacing_id: order_by
}

"""aggregate stddev_samp on columns"""
type annotations_stddev_samp_fields {
  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: Float

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: Float

  """id of the associated deposition."""
  deposition_id: Float

  """Numeric identifier (May change!)"""
  id: Float

  """Number of objects identified"""
  object_count: Float
  tomogram_voxel_spacing_id: Float
}

"""
order by stddev_samp() on columns of table "annotations"
"""
input annotations_stddev_samp_order_by {
  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: order_by

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: order_by

  """id of the associated deposition."""
  deposition_id: order_by

  """Numeric identifier (May change!)"""
  id: order_by

  """Number of objects identified"""
  object_count: order_by
  tomogram_voxel_spacing_id: order_by
}

"""aggregate sum on columns"""
type annotations_sum_fields {
  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: numeric

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: numeric

  """id of the associated deposition."""
  deposition_id: Int

  """Numeric identifier (May change!)"""
  id: Int

  """Number of objects identified"""
  object_count: Int
  tomogram_voxel_spacing_id: Int
}

"""
order by sum() on columns of table "annotations"
"""
input annotations_sum_order_by {
  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: order_by

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: order_by

  """id of the associated deposition."""
  deposition_id: order_by

  """Numeric identifier (May change!)"""
  id: order_by

  """Number of objects identified"""
  object_count: order_by
  tomogram_voxel_spacing_id: order_by
}

"""aggregate var_pop on columns"""
type annotations_var_pop_fields {
  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: Float

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: Float

  """id of the associated deposition."""
  deposition_id: Float

  """Numeric identifier (May change!)"""
  id: Float

  """Number of objects identified"""
  object_count: Float
  tomogram_voxel_spacing_id: Float
}

"""
order by var_pop() on columns of table "annotations"
"""
input annotations_var_pop_order_by {
  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: order_by

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: order_by

  """id of the associated deposition."""
  deposition_id: order_by

  """Numeric identifier (May change!)"""
  id: order_by

  """Number of objects identified"""
  object_count: order_by
  tomogram_voxel_spacing_id: order_by
}

"""aggregate var_samp on columns"""
type annotations_var_samp_fields {
  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: Float

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: Float

  """id of the associated deposition."""
  deposition_id: Float

  """Numeric identifier (May change!)"""
  id: Float

  """Number of objects identified"""
  object_count: Float
  tomogram_voxel_spacing_id: Float
}

"""
order by var_samp() on columns of table "annotations"
"""
input annotations_var_samp_order_by {
  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: order_by

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: order_by

  """id of the associated deposition."""
  deposition_id: order_by

  """Numeric identifier (May change!)"""
  id: order_by

  """Number of objects identified"""
  object_count: order_by
  tomogram_voxel_spacing_id: order_by
}

"""aggregate variance on columns"""
type annotations_variance_fields {
  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: Float

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: Float

  """id of the associated deposition."""
  deposition_id: Float

  """Numeric identifier (May change!)"""
  id: Float

  """Number of objects identified"""
  object_count: Float
  tomogram_voxel_spacing_id: Float
}

"""
order by variance() on columns of table "annotations"
"""
input annotations_variance_order_by {
  """
  Describe the confidence level of the annotation. Precision is defined as the % of annotation objects being true positive
  """
  confidence_precision: order_by

  """
  Describe the confidence level of the annotation. Recall is defined as the % of true positives being annotated correctly
  """
  confidence_recall: order_by

  """id of the associated deposition."""
  deposition_id: order_by

  """Numeric identifier (May change!)"""
  id: order_by

  """Number of objects identified"""
  object_count: order_by
  tomogram_voxel_spacing_id: order_by
}

"""ordering argument of a cursor"""
enum cursor_ordering {
  """ascending ordering of the cursor"""
  ASC

  """descending ordering of the cursor"""
  DESC
}

"""Authors of a dataset"""
type dataset_authors {
  """Address of the institution an author is affiliated with."""
  affiliation_address: String

  """
  A unique identifier assigned to the affiliated institution by The Research Organization Registry (ROR).
  """
  affiliation_identifier: String

  """Name of the institutions an author is affiliated with. Comma separated"""
  affiliation_name: String

  """The order in which the author appears in the publication"""
  author_list_order: Int

  """Indicating whether an author is the corresponding author"""
  corresponding_author_status: Boolean

  """An object relationship"""
  dataset: datasets!
  dataset_id: Int!

  """Email address for each author"""
  email: String
  id: Int!

  """Full name of a dataset author (e.g. Jane Doe)."""
  name: String!

  """A unique, persistent identifier for researchers, provided by ORCID."""
  orcid: String
  primary_author_status: Boolean
}

"""
aggregated selection of "dataset_authors"
"""
type dataset_authors_aggregate {
  aggregate: dataset_authors_aggregate_fields
  nodes: [dataset_authors!]!
}

input dataset_authors_aggregate_bool_exp {
  bool_and: dataset_authors_aggregate_bool_exp_bool_and
  bool_or: dataset_authors_aggregate_bool_exp_bool_or
  count: dataset_authors_aggregate_bool_exp_count
}

input dataset_authors_aggregate_bool_exp_bool_and {
  arguments: dataset_authors_select_column_dataset_authors_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: dataset_authors_bool_exp
  predicate: Boolean_comparison_exp!
}

input dataset_authors_aggregate_bool_exp_bool_or {
  arguments: dataset_authors_select_column_dataset_authors_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: dataset_authors_bool_exp
  predicate: Boolean_comparison_exp!
}

input dataset_authors_aggregate_bool_exp_count {
  arguments: [dataset_authors_select_column!]
  distinct: Boolean
  filter: dataset_authors_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "dataset_authors"
"""
type dataset_authors_aggregate_fields {
  avg: dataset_authors_avg_fields
  count(columns: [dataset_authors_select_column!], distinct: Boolean): Int!
  max: dataset_authors_max_fields
  min: dataset_authors_min_fields
  stddev: dataset_authors_stddev_fields
  stddev_pop: dataset_authors_stddev_pop_fields
  stddev_samp: dataset_authors_stddev_samp_fields
  sum: dataset_authors_sum_fields
  var_pop: dataset_authors_var_pop_fields
  var_samp: dataset_authors_var_samp_fields
  variance: dataset_authors_variance_fields
}

"""
order by aggregate values of table "dataset_authors"
"""
input dataset_authors_aggregate_order_by {
  avg: dataset_authors_avg_order_by
  count: order_by
  max: dataset_authors_max_order_by
  min: dataset_authors_min_order_by
  stddev: dataset_authors_stddev_order_by
  stddev_pop: dataset_authors_stddev_pop_order_by
  stddev_samp: dataset_authors_stddev_samp_order_by
  sum: dataset_authors_sum_order_by
  var_pop: dataset_authors_var_pop_order_by
  var_samp: dataset_authors_var_samp_order_by
  variance: dataset_authors_variance_order_by
}

"""aggregate avg on columns"""
type dataset_authors_avg_fields {
  """The order in which the author appears in the publication"""
  author_list_order: Float
  dataset_id: Float
  id: Float
}

"""
order by avg() on columns of table "dataset_authors"
"""
input dataset_authors_avg_order_by {
  """The order in which the author appears in the publication"""
  author_list_order: order_by
  dataset_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "dataset_authors". All fields are combined with a logical 'AND'.
"""
input dataset_authors_bool_exp {
  _and: [dataset_authors_bool_exp!]
  _not: dataset_authors_bool_exp
  _or: [dataset_authors_bool_exp!]
  affiliation_address: String_comparison_exp
  affiliation_identifier: String_comparison_exp
  affiliation_name: String_comparison_exp
  author_list_order: Int_comparison_exp
  corresponding_author_status: Boolean_comparison_exp
  dataset: datasets_bool_exp
  dataset_id: Int_comparison_exp
  email: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  orcid: String_comparison_exp
  primary_author_status: Boolean_comparison_exp
}

"""aggregate max on columns"""
type dataset_authors_max_fields {
  """Address of the institution an author is affiliated with."""
  affiliation_address: String

  """
  A unique identifier assigned to the affiliated institution by The Research Organization Registry (ROR).
  """
  affiliation_identifier: String

  """Name of the institutions an author is affiliated with. Comma separated"""
  affiliation_name: String

  """The order in which the author appears in the publication"""
  author_list_order: Int
  dataset_id: Int

  """Email address for each author"""
  email: String
  id: Int

  """Full name of a dataset author (e.g. Jane Doe)."""
  name: String

  """A unique, persistent identifier for researchers, provided by ORCID."""
  orcid: String
}

"""
order by max() on columns of table "dataset_authors"
"""
input dataset_authors_max_order_by {
  """Address of the institution an author is affiliated with."""
  affiliation_address: order_by

  """
  A unique identifier assigned to the affiliated institution by The Research Organization Registry (ROR).
  """
  affiliation_identifier: order_by

  """Name of the institutions an author is affiliated with. Comma separated"""
  affiliation_name: order_by

  """The order in which the author appears in the publication"""
  author_list_order: order_by
  dataset_id: order_by

  """Email address for each author"""
  email: order_by
  id: order_by

  """Full name of a dataset author (e.g. Jane Doe)."""
  name: order_by

  """A unique, persistent identifier for researchers, provided by ORCID."""
  orcid: order_by
}

"""aggregate min on columns"""
type dataset_authors_min_fields {
  """Address of the institution an author is affiliated with."""
  affiliation_address: String

  """
  A unique identifier assigned to the affiliated institution by The Research Organization Registry (ROR).
  """
  affiliation_identifier: String

  """Name of the institutions an author is affiliated with. Comma separated"""
  affiliation_name: String

  """The order in which the author appears in the publication"""
  author_list_order: Int
  dataset_id: Int

  """Email address for each author"""
  email: String
  id: Int

  """Full name of a dataset author (e.g. Jane Doe)."""
  name: String

  """A unique, persistent identifier for researchers, provided by ORCID."""
  orcid: String
}

"""
order by min() on columns of table "dataset_authors"
"""
input dataset_authors_min_order_by {
  """Address of the institution an author is affiliated with."""
  affiliation_address: order_by

  """
  A unique identifier assigned to the affiliated institution by The Research Organization Registry (ROR).
  """
  affiliation_identifier: order_by

  """Name of the institutions an author is affiliated with. Comma separated"""
  affiliation_name: order_by

  """The order in which the author appears in the publication"""
  author_list_order: order_by
  dataset_id: order_by

  """Email address for each author"""
  email: order_by
  id: order_by

  """Full name of a dataset author (e.g. Jane Doe)."""
  name: order_by

  """A unique, persistent identifier for researchers, provided by ORCID."""
  orcid: order_by
}

"""Ordering options when selecting data from "dataset_authors"."""
input dataset_authors_order_by {
  affiliation_address: order_by
  affiliation_identifier: order_by
  affiliation_name: order_by
  author_list_order: order_by
  corresponding_author_status: order_by
  dataset: datasets_order_by
  dataset_id: order_by
  email: order_by
  id: order_by
  name: order_by
  orcid: order_by
  primary_author_status: order_by
}

"""
select columns of table "dataset_authors"
"""
enum dataset_authors_select_column {
  """column name"""
  affiliation_address

  """column name"""
  affiliation_identifier

  """column name"""
  affiliation_name

  """column name"""
  author_list_order

  """column name"""
  corresponding_author_status

  """column name"""
  dataset_id

  """column name"""
  email

  """column name"""
  id

  """column name"""
  name

  """column name"""
  orcid

  """column name"""
  primary_author_status
}

"""
select "dataset_authors_aggregate_bool_exp_bool_and_arguments_columns" columns of table "dataset_authors"
"""
enum dataset_authors_select_column_dataset_authors_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  corresponding_author_status

  """column name"""
  primary_author_status
}

"""
select "dataset_authors_aggregate_bool_exp_bool_or_arguments_columns" columns of table "dataset_authors"
"""
enum dataset_authors_select_column_dataset_authors_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  corresponding_author_status

  """column name"""
  primary_author_status
}

"""aggregate stddev on columns"""
type dataset_authors_stddev_fields {
  """The order in which the author appears in the publication"""
  author_list_order: Float
  dataset_id: Float
  id: Float
}

"""
order by stddev() on columns of table "dataset_authors"
"""
input dataset_authors_stddev_order_by {
  """The order in which the author appears in the publication"""
  author_list_order: order_by
  dataset_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type dataset_authors_stddev_pop_fields {
  """The order in which the author appears in the publication"""
  author_list_order: Float
  dataset_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "dataset_authors"
"""
input dataset_authors_stddev_pop_order_by {
  """The order in which the author appears in the publication"""
  author_list_order: order_by
  dataset_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type dataset_authors_stddev_samp_fields {
  """The order in which the author appears in the publication"""
  author_list_order: Float
  dataset_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "dataset_authors"
"""
input dataset_authors_stddev_samp_order_by {
  """The order in which the author appears in the publication"""
  author_list_order: order_by
  dataset_id: order_by
  id: order_by
}

"""aggregate sum on columns"""
type dataset_authors_sum_fields {
  """The order in which the author appears in the publication"""
  author_list_order: Int
  dataset_id: Int
  id: Int
}

"""
order by sum() on columns of table "dataset_authors"
"""
input dataset_authors_sum_order_by {
  """The order in which the author appears in the publication"""
  author_list_order: order_by
  dataset_id: order_by
  id: order_by
}

"""aggregate var_pop on columns"""
type dataset_authors_var_pop_fields {
  """The order in which the author appears in the publication"""
  author_list_order: Float
  dataset_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "dataset_authors"
"""
input dataset_authors_var_pop_order_by {
  """The order in which the author appears in the publication"""
  author_list_order: order_by
  dataset_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type dataset_authors_var_samp_fields {
  """The order in which the author appears in the publication"""
  author_list_order: Float
  dataset_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "dataset_authors"
"""
input dataset_authors_var_samp_order_by {
  """The order in which the author appears in the publication"""
  author_list_order: order_by
  dataset_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type dataset_authors_variance_fields {
  """The order in which the author appears in the publication"""
  author_list_order: Float
  dataset_id: Float
  id: Float
}

"""
order by variance() on columns of table "dataset_authors"
"""
input dataset_authors_variance_order_by {
  """The order in which the author appears in the publication"""
  author_list_order: order_by
  dataset_id: order_by
  id: order_by
}

"""Funding sources for a dataset"""
type dataset_funding {
  """An object relationship"""
  dataset: datasets!
  dataset_id: Int!

  """Name of the funding agency."""
  funding_agency_name: String!

  """Grant identifier provided by the funding agency."""
  grant_id: String
  id: Int!
}

"""
aggregated selection of "dataset_funding"
"""
type dataset_funding_aggregate {
  aggregate: dataset_funding_aggregate_fields
  nodes: [dataset_funding!]!
}

input dataset_funding_aggregate_bool_exp {
  count: dataset_funding_aggregate_bool_exp_count
}

input dataset_funding_aggregate_bool_exp_count {
  arguments: [dataset_funding_select_column!]
  distinct: Boolean
  filter: dataset_funding_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "dataset_funding"
"""
type dataset_funding_aggregate_fields {
  avg: dataset_funding_avg_fields
  count(columns: [dataset_funding_select_column!], distinct: Boolean): Int!
  max: dataset_funding_max_fields
  min: dataset_funding_min_fields
  stddev: dataset_funding_stddev_fields
  stddev_pop: dataset_funding_stddev_pop_fields
  stddev_samp: dataset_funding_stddev_samp_fields
  sum: dataset_funding_sum_fields
  var_pop: dataset_funding_var_pop_fields
  var_samp: dataset_funding_var_samp_fields
  variance: dataset_funding_variance_fields
}

"""
order by aggregate values of table "dataset_funding"
"""
input dataset_funding_aggregate_order_by {
  avg: dataset_funding_avg_order_by
  count: order_by
  max: dataset_funding_max_order_by
  min: dataset_funding_min_order_by
  stddev: dataset_funding_stddev_order_by
  stddev_pop: dataset_funding_stddev_pop_order_by
  stddev_samp: dataset_funding_stddev_samp_order_by
  sum: dataset_funding_sum_order_by
  var_pop: dataset_funding_var_pop_order_by
  var_samp: dataset_funding_var_samp_order_by
  variance: dataset_funding_variance_order_by
}

"""aggregate avg on columns"""
type dataset_funding_avg_fields {
  dataset_id: Float
  id: Float
}

"""
order by avg() on columns of table "dataset_funding"
"""
input dataset_funding_avg_order_by {
  dataset_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "dataset_funding". All fields are combined with a logical 'AND'.
"""
input dataset_funding_bool_exp {
  _and: [dataset_funding_bool_exp!]
  _not: dataset_funding_bool_exp
  _or: [dataset_funding_bool_exp!]
  dataset: datasets_bool_exp
  dataset_id: Int_comparison_exp
  funding_agency_name: String_comparison_exp
  grant_id: String_comparison_exp
  id: Int_comparison_exp
}

"""aggregate max on columns"""
type dataset_funding_max_fields {
  dataset_id: Int

  """Name of the funding agency."""
  funding_agency_name: String

  """Grant identifier provided by the funding agency."""
  grant_id: String
  id: Int
}

"""
order by max() on columns of table "dataset_funding"
"""
input dataset_funding_max_order_by {
  dataset_id: order_by

  """Name of the funding agency."""
  funding_agency_name: order_by

  """Grant identifier provided by the funding agency."""
  grant_id: order_by
  id: order_by
}

"""aggregate min on columns"""
type dataset_funding_min_fields {
  dataset_id: Int

  """Name of the funding agency."""
  funding_agency_name: String

  """Grant identifier provided by the funding agency."""
  grant_id: String
  id: Int
}

"""
order by min() on columns of table "dataset_funding"
"""
input dataset_funding_min_order_by {
  dataset_id: order_by

  """Name of the funding agency."""
  funding_agency_name: order_by

  """Grant identifier provided by the funding agency."""
  grant_id: order_by
  id: order_by
}

"""Ordering options when selecting data from "dataset_funding"."""
input dataset_funding_order_by {
  dataset: datasets_order_by
  dataset_id: order_by
  funding_agency_name: order_by
  grant_id: order_by
  id: order_by
}

"""
select columns of table "dataset_funding"
"""
enum dataset_funding_select_column {
  """column name"""
  dataset_id

  """column name"""
  funding_agency_name

  """column name"""
  grant_id

  """column name"""
  id
}

"""aggregate stddev on columns"""
type dataset_funding_stddev_fields {
  dataset_id: Float
  id: Float
}

"""
order by stddev() on columns of table "dataset_funding"
"""
input dataset_funding_stddev_order_by {
  dataset_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type dataset_funding_stddev_pop_fields {
  dataset_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "dataset_funding"
"""
input dataset_funding_stddev_pop_order_by {
  dataset_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type dataset_funding_stddev_samp_fields {
  dataset_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "dataset_funding"
"""
input dataset_funding_stddev_samp_order_by {
  dataset_id: order_by
  id: order_by
}

"""aggregate sum on columns"""
type dataset_funding_sum_fields {
  dataset_id: Int
  id: Int
}

"""
order by sum() on columns of table "dataset_funding"
"""
input dataset_funding_sum_order_by {
  dataset_id: order_by
  id: order_by
}

"""aggregate var_pop on columns"""
type dataset_funding_var_pop_fields {
  dataset_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "dataset_funding"
"""
input dataset_funding_var_pop_order_by {
  dataset_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type dataset_funding_var_samp_fields {
  dataset_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "dataset_funding"
"""
input dataset_funding_var_samp_order_by {
  dataset_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type dataset_funding_variance_fields {
  dataset_id: Float
  id: Float
}

"""
order by variance() on columns of table "dataset_funding"
"""
input dataset_funding_variance_order_by {
  dataset_id: order_by
  id: order_by
}

"""Dataset Metadata"""
type datasets {
  """An array relationship"""
  authors(
    """distinct select on columns"""
    distinct_on: [dataset_authors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dataset_authors_order_by!]

    """filter the rows returned"""
    where: dataset_authors_bool_exp
  ): [dataset_authors!]!

  """An aggregate relationship"""
  authors_aggregate(
    """distinct select on columns"""
    distinct_on: [dataset_authors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dataset_authors_order_by!]

    """filter the rows returned"""
    where: dataset_authors_bool_exp
  ): dataset_authors_aggregate!

  """
  If this dataset only focuses on a specific part of a cell, include the subset here
  """
  cell_component_id: String

  """Name of the cellular component"""
  cell_component_name: String

  """
  Name of the cell from which a biological sample used in a CryoET study is derived from.
  """
  cell_name: String

  """NCBI Identifier for the cell line or strain"""
  cell_strain_id: String

  """Cell line or strain for the sample."""
  cell_strain_name: String

  """Cell Ontology identifier for the cell type"""
  cell_type_id: String

  """
  DOIs for publications that cite the dataset. Use a comma to separate multiple DOIs.
  """
  dataset_citations: String

  """
  DOIs for publications that describe the dataset. Use a comma to separate multiple DOIs.
  """
  dataset_publications: String

  """Date when a dataset is initially received by the Data Portal."""
  deposition_date: date!

  """
  A short description of a CryoET dataset, similar to an abstract for a journal article or dataset.
  """
  description: String!

  """An array relationship"""
  funding_sources(
    """distinct select on columns"""
    distinct_on: [dataset_funding_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dataset_funding_order_by!]

    """filter the rows returned"""
    where: dataset_funding_bool_exp
  ): [dataset_funding!]!

  """An aggregate relationship"""
  funding_sources_aggregate(
    """distinct select on columns"""
    distinct_on: [dataset_funding_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dataset_funding_order_by!]

    """filter the rows returned"""
    where: dataset_funding_bool_exp
  ): dataset_funding_aggregate!

  """Describe Cryo-ET grid preparation."""
  grid_preparation: String

  """The https directory path where this dataset is contained"""
  https_prefix: String!

  """
  An identifier for a CryoET dataset, assigned by the Data Portal. Used to identify the dataset as the directory name in data tree
  """
  id: Int!

  """URL for the thumbnail of preview image."""
  key_photo_thumbnail_url: String

  """URL for the dataset preview image."""
  key_photo_url: String

  """Date when a released dataset is last modified."""
  last_modified_date: date

  """
  Name of the organism from which a biological sample used in a CryoET study is derived from, e.g. homo sapiens
  """
  organism_name: String

  """NCBI taxonomy identifier for the organism, e.g. 9606"""
  organism_taxid: String

  """
  Describe other setup not covered by sample preparation or grid preparation that may make this dataset unique in  the same publication
  """
  other_setup: String

  """
  If a CryoET dataset is also deposited into another database, enter the database identifier here (e.g. EMPIAR-11445). Use a comma to separate multiple identifiers.
  """
  related_database_entries: String

  """
  If a CryoET dataset is also deposited into another database, e.g. EMPAIR, enter the database identifier here (e.g.https://www.ebi.ac.uk/empiar/EMPIAR-12345/).  Use a comma to separate multiple links.
  """
  related_database_links: String

  """Date when a dataset is made available on the Data Portal."""
  release_date: date!

  """An array relationship"""
  runs(
    """distinct select on columns"""
    distinct_on: [runs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [runs_order_by!]

    """filter the rows returned"""
    where: runs_bool_exp
  ): [runs!]!

  """An aggregate relationship"""
  runs_aggregate(
    """distinct select on columns"""
    distinct_on: [runs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [runs_order_by!]

    """filter the rows returned"""
    where: runs_bool_exp
  ): runs_aggregate!

  """The S3 public bucket path where this dataset is contained"""
  s3_prefix: String!

  """Describe how the sample was prepared."""
  sample_preparation: String

  """
  Type of samples used in a CryoET study. (cell, tissue, organism, intact organelle, in-vitro mixture, in-silico synthetic data, other)
  """
  sample_type: String!

  """UBERON identifier for the tissue"""
  tissue_id: String

  """
  Name of the tissue from which a biological sample used in a CryoET study is derived from.
  """
  tissue_name: String

  """Title of a CryoET dataset"""
  title: String!
}

"""
aggregated selection of "datasets"
"""
type datasets_aggregate {
  aggregate: datasets_aggregate_fields
  nodes: [datasets!]!
}

"""
aggregate fields of "datasets"
"""
type datasets_aggregate_fields {
  avg: datasets_avg_fields
  count(columns: [datasets_select_column!], distinct: Boolean): Int!
  max: datasets_max_fields
  min: datasets_min_fields
  stddev: datasets_stddev_fields
  stddev_pop: datasets_stddev_pop_fields
  stddev_samp: datasets_stddev_samp_fields
  sum: datasets_sum_fields
  var_pop: datasets_var_pop_fields
  var_samp: datasets_var_samp_fields
  variance: datasets_variance_fields
}

"""aggregate avg on columns"""
type datasets_avg_fields {
  """
  An identifier for a CryoET dataset, assigned by the Data Portal. Used to identify the dataset as the directory name in data tree
  """
  id: Float
}

"""
Boolean expression to filter rows from the table "datasets". All fields are combined with a logical 'AND'.
"""
input datasets_bool_exp {
  _and: [datasets_bool_exp!]
  _not: datasets_bool_exp
  _or: [datasets_bool_exp!]
  authors: dataset_authors_bool_exp
  authors_aggregate: dataset_authors_aggregate_bool_exp
  cell_component_id: String_comparison_exp
  cell_component_name: String_comparison_exp
  cell_name: String_comparison_exp
  cell_strain_id: String_comparison_exp
  cell_strain_name: String_comparison_exp
  cell_type_id: String_comparison_exp
  dataset_citations: String_comparison_exp
  dataset_publications: String_comparison_exp
  deposition_date: date_comparison_exp
  description: String_comparison_exp
  funding_sources: dataset_funding_bool_exp
  funding_sources_aggregate: dataset_funding_aggregate_bool_exp
  grid_preparation: String_comparison_exp
  https_prefix: String_comparison_exp
  id: Int_comparison_exp
  key_photo_thumbnail_url: String_comparison_exp
  key_photo_url: String_comparison_exp
  last_modified_date: date_comparison_exp
  organism_name: String_comparison_exp
  organism_taxid: String_comparison_exp
  other_setup: String_comparison_exp
  related_database_entries: String_comparison_exp
  related_database_links: String_comparison_exp
  release_date: date_comparison_exp
  runs: runs_bool_exp
  runs_aggregate: runs_aggregate_bool_exp
  s3_prefix: String_comparison_exp
  sample_preparation: String_comparison_exp
  sample_type: String_comparison_exp
  tissue_id: String_comparison_exp
  tissue_name: String_comparison_exp
  title: String_comparison_exp
}

"""aggregate max on columns"""
type datasets_max_fields {
  """
  If this dataset only focuses on a specific part of a cell, include the subset here
  """
  cell_component_id: String

  """Name of the cellular component"""
  cell_component_name: String

  """
  Name of the cell from which a biological sample used in a CryoET study is derived from.
  """
  cell_name: String

  """NCBI Identifier for the cell line or strain"""
  cell_strain_id: String

  """Cell line or strain for the sample."""
  cell_strain_name: String

  """Cell Ontology identifier for the cell type"""
  cell_type_id: String

  """
  DOIs for publications that cite the dataset. Use a comma to separate multiple DOIs.
  """
  dataset_citations: String

  """
  DOIs for publications that describe the dataset. Use a comma to separate multiple DOIs.
  """
  dataset_publications: String

  """Date when a dataset is initially received by the Data Portal."""
  deposition_date: date

  """
  A short description of a CryoET dataset, similar to an abstract for a journal article or dataset.
  """
  description: String

  """Describe Cryo-ET grid preparation."""
  grid_preparation: String

  """The https directory path where this dataset is contained"""
  https_prefix: String

  """
  An identifier for a CryoET dataset, assigned by the Data Portal. Used to identify the dataset as the directory name in data tree
  """
  id: Int

  """URL for the thumbnail of preview image."""
  key_photo_thumbnail_url: String

  """URL for the dataset preview image."""
  key_photo_url: String

  """Date when a released dataset is last modified."""
  last_modified_date: date

  """
  Name of the organism from which a biological sample used in a CryoET study is derived from, e.g. homo sapiens
  """
  organism_name: String

  """NCBI taxonomy identifier for the organism, e.g. 9606"""
  organism_taxid: String

  """
  Describe other setup not covered by sample preparation or grid preparation that may make this dataset unique in  the same publication
  """
  other_setup: String

  """
  If a CryoET dataset is also deposited into another database, enter the database identifier here (e.g. EMPIAR-11445). Use a comma to separate multiple identifiers.
  """
  related_database_entries: String

  """
  If a CryoET dataset is also deposited into another database, e.g. EMPAIR, enter the database identifier here (e.g.https://www.ebi.ac.uk/empiar/EMPIAR-12345/).  Use a comma to separate multiple links.
  """
  related_database_links: String

  """Date when a dataset is made available on the Data Portal."""
  release_date: date

  """The S3 public bucket path where this dataset is contained"""
  s3_prefix: String

  """Describe how the sample was prepared."""
  sample_preparation: String

  """
  Type of samples used in a CryoET study. (cell, tissue, organism, intact organelle, in-vitro mixture, in-silico synthetic data, other)
  """
  sample_type: String

  """UBERON identifier for the tissue"""
  tissue_id: String

  """
  Name of the tissue from which a biological sample used in a CryoET study is derived from.
  """
  tissue_name: String

  """Title of a CryoET dataset"""
  title: String
}

"""aggregate min on columns"""
type datasets_min_fields {
  """
  If this dataset only focuses on a specific part of a cell, include the subset here
  """
  cell_component_id: String

  """Name of the cellular component"""
  cell_component_name: String

  """
  Name of the cell from which a biological sample used in a CryoET study is derived from.
  """
  cell_name: String

  """NCBI Identifier for the cell line or strain"""
  cell_strain_id: String

  """Cell line or strain for the sample."""
  cell_strain_name: String

  """Cell Ontology identifier for the cell type"""
  cell_type_id: String

  """
  DOIs for publications that cite the dataset. Use a comma to separate multiple DOIs.
  """
  dataset_citations: String

  """
  DOIs for publications that describe the dataset. Use a comma to separate multiple DOIs.
  """
  dataset_publications: String

  """Date when a dataset is initially received by the Data Portal."""
  deposition_date: date

  """
  A short description of a CryoET dataset, similar to an abstract for a journal article or dataset.
  """
  description: String

  """Describe Cryo-ET grid preparation."""
  grid_preparation: String

  """The https directory path where this dataset is contained"""
  https_prefix: String

  """
  An identifier for a CryoET dataset, assigned by the Data Portal. Used to identify the dataset as the directory name in data tree
  """
  id: Int

  """URL for the thumbnail of preview image."""
  key_photo_thumbnail_url: String

  """URL for the dataset preview image."""
  key_photo_url: String

  """Date when a released dataset is last modified."""
  last_modified_date: date

  """
  Name of the organism from which a biological sample used in a CryoET study is derived from, e.g. homo sapiens
  """
  organism_name: String

  """NCBI taxonomy identifier for the organism, e.g. 9606"""
  organism_taxid: String

  """
  Describe other setup not covered by sample preparation or grid preparation that may make this dataset unique in  the same publication
  """
  other_setup: String

  """
  If a CryoET dataset is also deposited into another database, enter the database identifier here (e.g. EMPIAR-11445). Use a comma to separate multiple identifiers.
  """
  related_database_entries: String

  """
  If a CryoET dataset is also deposited into another database, e.g. EMPAIR, enter the database identifier here (e.g.https://www.ebi.ac.uk/empiar/EMPIAR-12345/).  Use a comma to separate multiple links.
  """
  related_database_links: String

  """Date when a dataset is made available on the Data Portal."""
  release_date: date

  """The S3 public bucket path where this dataset is contained"""
  s3_prefix: String

  """Describe how the sample was prepared."""
  sample_preparation: String

  """
  Type of samples used in a CryoET study. (cell, tissue, organism, intact organelle, in-vitro mixture, in-silico synthetic data, other)
  """
  sample_type: String

  """UBERON identifier for the tissue"""
  tissue_id: String

  """
  Name of the tissue from which a biological sample used in a CryoET study is derived from.
  """
  tissue_name: String

  """Title of a CryoET dataset"""
  title: String
}

"""Ordering options when selecting data from "datasets"."""
input datasets_order_by {
  authors_aggregate: dataset_authors_aggregate_order_by
  cell_component_id: order_by
  cell_component_name: order_by
  cell_name: order_by
  cell_strain_id: order_by
  cell_strain_name: order_by
  cell_type_id: order_by
  dataset_citations: order_by
  dataset_publications: order_by
  deposition_date: order_by
  description: order_by
  funding_sources_aggregate: dataset_funding_aggregate_order_by
  grid_preparation: order_by
  https_prefix: order_by
  id: order_by
  key_photo_thumbnail_url: order_by
  key_photo_url: order_by
  last_modified_date: order_by
  organism_name: order_by
  organism_taxid: order_by
  other_setup: order_by
  related_database_entries: order_by
  related_database_links: order_by
  release_date: order_by
  runs_aggregate: runs_aggregate_order_by
  s3_prefix: order_by
  sample_preparation: order_by
  sample_type: order_by
  tissue_id: order_by
  tissue_name: order_by
  title: order_by
}

"""
select columns of table "datasets"
"""
enum datasets_select_column {
  """column name"""
  cell_component_id

  """column name"""
  cell_component_name

  """column name"""
  cell_name

  """column name"""
  cell_strain_id

  """column name"""
  cell_strain_name

  """column name"""
  cell_type_id

  """column name"""
  dataset_citations

  """column name"""
  dataset_publications

  """column name"""
  deposition_date

  """column name"""
  description

  """column name"""
  grid_preparation

  """column name"""
  https_prefix

  """column name"""
  id

  """column name"""
  key_photo_thumbnail_url

  """column name"""
  key_photo_url

  """column name"""
  last_modified_date

  """column name"""
  organism_name

  """column name"""
  organism_taxid

  """column name"""
  other_setup

  """column name"""
  related_database_entries

  """column name"""
  related_database_links

  """column name"""
  release_date

  """column name"""
  s3_prefix

  """column name"""
  sample_preparation

  """column name"""
  sample_type

  """column name"""
  tissue_id

  """column name"""
  tissue_name

  """column name"""
  title
}

"""aggregate stddev on columns"""
type datasets_stddev_fields {
  """
  An identifier for a CryoET dataset, assigned by the Data Portal. Used to identify the dataset as the directory name in data tree
  """
  id: Float
}

"""aggregate stddev_pop on columns"""
type datasets_stddev_pop_fields {
  """
  An identifier for a CryoET dataset, assigned by the Data Portal. Used to identify the dataset as the directory name in data tree
  """
  id: Float
}

"""aggregate stddev_samp on columns"""
type datasets_stddev_samp_fields {
  """
  An identifier for a CryoET dataset, assigned by the Data Portal. Used to identify the dataset as the directory name in data tree
  """
  id: Float
}

"""aggregate sum on columns"""
type datasets_sum_fields {
  """
  An identifier for a CryoET dataset, assigned by the Data Portal. Used to identify the dataset as the directory name in data tree
  """
  id: Int
}

"""aggregate var_pop on columns"""
type datasets_var_pop_fields {
  """
  An identifier for a CryoET dataset, assigned by the Data Portal. Used to identify the dataset as the directory name in data tree
  """
  id: Float
}

"""aggregate var_samp on columns"""
type datasets_var_samp_fields {
  """
  An identifier for a CryoET dataset, assigned by the Data Portal. Used to identify the dataset as the directory name in data tree
  """
  id: Float
}

"""aggregate variance on columns"""
type datasets_variance_fields {
  """
  An identifier for a CryoET dataset, assigned by the Data Portal. Used to identify the dataset as the directory name in data tree
  """
  id: Float
}

scalar date

"""
Boolean expression to compare columns of type "date". All fields are combined with logical 'AND'.
"""
input date_comparison_exp {
  _eq: date
  _gt: date
  _gte: date
  _in: [date!]
  _is_null: Boolean
  _lt: date
  _lte: date
  _neq: date
  _nin: [date!]
}

scalar numeric

"""
Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'.
"""
input numeric_comparison_exp {
  _eq: numeric
  _gt: numeric
  _gte: numeric
  _in: [numeric!]
  _is_null: Boolean
  _lt: numeric
  _lte: numeric
  _neq: numeric
  _nin: [numeric!]
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

type query_root {
  """
  fetch data from the table: "annotation_authors"
  """
  annotation_authors(
    """distinct select on columns"""
    distinct_on: [annotation_authors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotation_authors_order_by!]

    """filter the rows returned"""
    where: annotation_authors_bool_exp
  ): [annotation_authors!]!

  """
  fetch aggregated fields from the table: "annotation_authors"
  """
  annotation_authors_aggregate(
    """distinct select on columns"""
    distinct_on: [annotation_authors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotation_authors_order_by!]

    """filter the rows returned"""
    where: annotation_authors_bool_exp
  ): annotation_authors_aggregate!

  """
  fetch data from the table: "annotation_authors" using primary key columns
  """
  annotation_authors_by_pk(
    """Numeric identifier for this annotation author (this may change!)"""
    id: Int!
  ): annotation_authors

  """
  fetch data from the table: "annotation_files"
  """
  annotation_files(
    """distinct select on columns"""
    distinct_on: [annotation_files_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotation_files_order_by!]

    """filter the rows returned"""
    where: annotation_files_bool_exp
  ): [annotation_files!]!

  """
  fetch aggregated fields from the table: "annotation_files"
  """
  annotation_files_aggregate(
    """distinct select on columns"""
    distinct_on: [annotation_files_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotation_files_order_by!]

    """filter the rows returned"""
    where: annotation_files_bool_exp
  ): annotation_files_aggregate!

  """
  fetch data from the table: "annotation_files" using primary key columns
  """
  annotation_files_by_pk(id: Int!): annotation_files

  """An array relationship"""
  annotations(
    """distinct select on columns"""
    distinct_on: [annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotations_order_by!]

    """filter the rows returned"""
    where: annotations_bool_exp
  ): [annotations!]!

  """An aggregate relationship"""
  annotations_aggregate(
    """distinct select on columns"""
    distinct_on: [annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotations_order_by!]

    """filter the rows returned"""
    where: annotations_bool_exp
  ): annotations_aggregate!

  """fetch data from the table: "annotations" using primary key columns"""
  annotations_by_pk(
    """Numeric identifier (May change!)"""
    id: Int!
  ): annotations

  """
  fetch data from the table: "dataset_authors"
  """
  dataset_authors(
    """distinct select on columns"""
    distinct_on: [dataset_authors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dataset_authors_order_by!]

    """filter the rows returned"""
    where: dataset_authors_bool_exp
  ): [dataset_authors!]!

  """
  fetch aggregated fields from the table: "dataset_authors"
  """
  dataset_authors_aggregate(
    """distinct select on columns"""
    distinct_on: [dataset_authors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dataset_authors_order_by!]

    """filter the rows returned"""
    where: dataset_authors_bool_exp
  ): dataset_authors_aggregate!

  """fetch data from the table: "dataset_authors" using primary key columns"""
  dataset_authors_by_pk(id: Int!): dataset_authors

  """
  fetch data from the table: "dataset_funding"
  """
  dataset_funding(
    """distinct select on columns"""
    distinct_on: [dataset_funding_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dataset_funding_order_by!]

    """filter the rows returned"""
    where: dataset_funding_bool_exp
  ): [dataset_funding!]!

  """
  fetch aggregated fields from the table: "dataset_funding"
  """
  dataset_funding_aggregate(
    """distinct select on columns"""
    distinct_on: [dataset_funding_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dataset_funding_order_by!]

    """filter the rows returned"""
    where: dataset_funding_bool_exp
  ): dataset_funding_aggregate!

  """fetch data from the table: "dataset_funding" using primary key columns"""
  dataset_funding_by_pk(id: Int!): dataset_funding

  """
  fetch data from the table: "datasets"
  """
  datasets(
    """distinct select on columns"""
    distinct_on: [datasets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [datasets_order_by!]

    """filter the rows returned"""
    where: datasets_bool_exp
  ): [datasets!]!

  """
  fetch aggregated fields from the table: "datasets"
  """
  datasets_aggregate(
    """distinct select on columns"""
    distinct_on: [datasets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [datasets_order_by!]

    """filter the rows returned"""
    where: datasets_bool_exp
  ): datasets_aggregate!

  """fetch data from the table: "datasets" using primary key columns"""
  datasets_by_pk(
    """
    An identifier for a CryoET dataset, assigned by the Data Portal. Used to identify the dataset as the directory name in data tree
    """
    id: Int!
  ): datasets

  """An array relationship"""
  runs(
    """distinct select on columns"""
    distinct_on: [runs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [runs_order_by!]

    """filter the rows returned"""
    where: runs_bool_exp
  ): [runs!]!

  """An aggregate relationship"""
  runs_aggregate(
    """distinct select on columns"""
    distinct_on: [runs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [runs_order_by!]

    """filter the rows returned"""
    where: runs_bool_exp
  ): runs_aggregate!

  """fetch data from the table: "runs" using primary key columns"""
  runs_by_pk(
    """Numeric identifier (May change!)"""
    id: Int!
  ): runs

  """An array relationship"""
  tiltseries(
    """distinct select on columns"""
    distinct_on: [tiltseries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tiltseries_order_by!]

    """filter the rows returned"""
    where: tiltseries_bool_exp
  ): [tiltseries!]!

  """An aggregate relationship"""
  tiltseries_aggregate(
    """distinct select on columns"""
    distinct_on: [tiltseries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tiltseries_order_by!]

    """filter the rows returned"""
    where: tiltseries_bool_exp
  ): tiltseries_aggregate!

  """fetch data from the table: "tiltseries" using primary key columns"""
  tiltseries_by_pk(id: Int!): tiltseries

  """
  fetch data from the table: "tomogram_authors"
  """
  tomogram_authors(
    """distinct select on columns"""
    distinct_on: [tomogram_authors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomogram_authors_order_by!]

    """filter the rows returned"""
    where: tomogram_authors_bool_exp
  ): [tomogram_authors!]!

  """
  fetch aggregated fields from the table: "tomogram_authors"
  """
  tomogram_authors_aggregate(
    """distinct select on columns"""
    distinct_on: [tomogram_authors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomogram_authors_order_by!]

    """filter the rows returned"""
    where: tomogram_authors_bool_exp
  ): tomogram_authors_aggregate!

  """
  fetch data from the table: "tomogram_authors" using primary key columns
  """
  tomogram_authors_by_pk(
    """Numeric identifier for this tomogram author (this may change!)"""
    id: Int!
  ): tomogram_authors

  """
  fetch data from the table: "tomogram_type"
  """
  tomogram_type(
    """distinct select on columns"""
    distinct_on: [tomogram_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomogram_type_order_by!]

    """filter the rows returned"""
    where: tomogram_type_bool_exp
  ): [tomogram_type!]!

  """fetch data from the table: "tomogram_type" using primary key columns"""
  tomogram_type_by_pk(value: String!): tomogram_type

  """An array relationship"""
  tomogram_voxel_spacings(
    """distinct select on columns"""
    distinct_on: [tomogram_voxel_spacings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomogram_voxel_spacings_order_by!]

    """filter the rows returned"""
    where: tomogram_voxel_spacings_bool_exp
  ): [tomogram_voxel_spacings!]!

  """An aggregate relationship"""
  tomogram_voxel_spacings_aggregate(
    """distinct select on columns"""
    distinct_on: [tomogram_voxel_spacings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomogram_voxel_spacings_order_by!]

    """filter the rows returned"""
    where: tomogram_voxel_spacings_bool_exp
  ): tomogram_voxel_spacings_aggregate!

  """
  fetch data from the table: "tomogram_voxel_spacings" using primary key columns
  """
  tomogram_voxel_spacings_by_pk(id: Int!): tomogram_voxel_spacings

  """An array relationship"""
  tomograms(
    """distinct select on columns"""
    distinct_on: [tomograms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomograms_order_by!]

    """filter the rows returned"""
    where: tomograms_bool_exp
  ): [tomograms!]!

  """An aggregate relationship"""
  tomograms_aggregate(
    """distinct select on columns"""
    distinct_on: [tomograms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomograms_order_by!]

    """filter the rows returned"""
    where: tomograms_bool_exp
  ): tomograms_aggregate!

  """fetch data from the table: "tomograms" using primary key columns"""
  tomograms_by_pk(
    """Numeric identifier for this tomogram (this may change!)"""
    id: Int!
  ): tomograms
}

"""Data related to an experiment run"""
type runs {
  """An object relationship"""
  dataset: datasets!

  """Reference to the dataset this run is a part of"""
  dataset_id: Int!

  """The https directory path where this dataset is contained"""
  https_prefix: String!

  """Numeric identifier (May change!)"""
  id: Int!

  """Short name for the tilt series"""
  name: String!

  """The S3 public bucket path where this dataset is contained"""
  s3_prefix: String!

  """An array relationship"""
  tiltseries(
    """distinct select on columns"""
    distinct_on: [tiltseries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tiltseries_order_by!]

    """filter the rows returned"""
    where: tiltseries_bool_exp
  ): [tiltseries!]!

  """An aggregate relationship"""
  tiltseries_aggregate(
    """distinct select on columns"""
    distinct_on: [tiltseries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tiltseries_order_by!]

    """filter the rows returned"""
    where: tiltseries_bool_exp
  ): tiltseries_aggregate!

  """An array relationship"""
  tomogram_voxel_spacings(
    """distinct select on columns"""
    distinct_on: [tomogram_voxel_spacings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomogram_voxel_spacings_order_by!]

    """filter the rows returned"""
    where: tomogram_voxel_spacings_bool_exp
  ): [tomogram_voxel_spacings!]!

  """An aggregate relationship"""
  tomogram_voxel_spacings_aggregate(
    """distinct select on columns"""
    distinct_on: [tomogram_voxel_spacings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomogram_voxel_spacings_order_by!]

    """filter the rows returned"""
    where: tomogram_voxel_spacings_bool_exp
  ): tomogram_voxel_spacings_aggregate!
}

"""
aggregated selection of "runs"
"""
type runs_aggregate {
  aggregate: runs_aggregate_fields
  nodes: [runs!]!
}

input runs_aggregate_bool_exp {
  count: runs_aggregate_bool_exp_count
}

input runs_aggregate_bool_exp_count {
  arguments: [runs_select_column!]
  distinct: Boolean
  filter: runs_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "runs"
"""
type runs_aggregate_fields {
  avg: runs_avg_fields
  count(columns: [runs_select_column!], distinct: Boolean): Int!
  max: runs_max_fields
  min: runs_min_fields
  stddev: runs_stddev_fields
  stddev_pop: runs_stddev_pop_fields
  stddev_samp: runs_stddev_samp_fields
  sum: runs_sum_fields
  var_pop: runs_var_pop_fields
  var_samp: runs_var_samp_fields
  variance: runs_variance_fields
}

"""
order by aggregate values of table "runs"
"""
input runs_aggregate_order_by {
  avg: runs_avg_order_by
  count: order_by
  max: runs_max_order_by
  min: runs_min_order_by
  stddev: runs_stddev_order_by
  stddev_pop: runs_stddev_pop_order_by
  stddev_samp: runs_stddev_samp_order_by
  sum: runs_sum_order_by
  var_pop: runs_var_pop_order_by
  var_samp: runs_var_samp_order_by
  variance: runs_variance_order_by
}

"""aggregate avg on columns"""
type runs_avg_fields {
  """Reference to the dataset this run is a part of"""
  dataset_id: Float

  """Numeric identifier (May change!)"""
  id: Float
}

"""
order by avg() on columns of table "runs"
"""
input runs_avg_order_by {
  """Reference to the dataset this run is a part of"""
  dataset_id: order_by

  """Numeric identifier (May change!)"""
  id: order_by
}

"""
Boolean expression to filter rows from the table "runs". All fields are combined with a logical 'AND'.
"""
input runs_bool_exp {
  _and: [runs_bool_exp!]
  _not: runs_bool_exp
  _or: [runs_bool_exp!]
  dataset: datasets_bool_exp
  dataset_id: Int_comparison_exp
  https_prefix: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  s3_prefix: String_comparison_exp
  tiltseries: tiltseries_bool_exp
  tiltseries_aggregate: tiltseries_aggregate_bool_exp
  tomogram_voxel_spacings: tomogram_voxel_spacings_bool_exp
  tomogram_voxel_spacings_aggregate: tomogram_voxel_spacings_aggregate_bool_exp
}

"""aggregate max on columns"""
type runs_max_fields {
  """Reference to the dataset this run is a part of"""
  dataset_id: Int

  """The https directory path where this dataset is contained"""
  https_prefix: String

  """Numeric identifier (May change!)"""
  id: Int

  """Short name for the tilt series"""
  name: String

  """The S3 public bucket path where this dataset is contained"""
  s3_prefix: String
}

"""
order by max() on columns of table "runs"
"""
input runs_max_order_by {
  """Reference to the dataset this run is a part of"""
  dataset_id: order_by

  """The https directory path where this dataset is contained"""
  https_prefix: order_by

  """Numeric identifier (May change!)"""
  id: order_by

  """Short name for the tilt series"""
  name: order_by

  """The S3 public bucket path where this dataset is contained"""
  s3_prefix: order_by
}

"""aggregate min on columns"""
type runs_min_fields {
  """Reference to the dataset this run is a part of"""
  dataset_id: Int

  """The https directory path where this dataset is contained"""
  https_prefix: String

  """Numeric identifier (May change!)"""
  id: Int

  """Short name for the tilt series"""
  name: String

  """The S3 public bucket path where this dataset is contained"""
  s3_prefix: String
}

"""
order by min() on columns of table "runs"
"""
input runs_min_order_by {
  """Reference to the dataset this run is a part of"""
  dataset_id: order_by

  """The https directory path where this dataset is contained"""
  https_prefix: order_by

  """Numeric identifier (May change!)"""
  id: order_by

  """Short name for the tilt series"""
  name: order_by

  """The S3 public bucket path where this dataset is contained"""
  s3_prefix: order_by
}

"""Ordering options when selecting data from "runs"."""
input runs_order_by {
  dataset: datasets_order_by
  dataset_id: order_by
  https_prefix: order_by
  id: order_by
  name: order_by
  s3_prefix: order_by
  tiltseries_aggregate: tiltseries_aggregate_order_by
  tomogram_voxel_spacings_aggregate: tomogram_voxel_spacings_aggregate_order_by
}

"""
select columns of table "runs"
"""
enum runs_select_column {
  """column name"""
  dataset_id

  """column name"""
  https_prefix

  """column name"""
  id

  """column name"""
  name

  """column name"""
  s3_prefix
}

"""aggregate stddev on columns"""
type runs_stddev_fields {
  """Reference to the dataset this run is a part of"""
  dataset_id: Float

  """Numeric identifier (May change!)"""
  id: Float
}

"""
order by stddev() on columns of table "runs"
"""
input runs_stddev_order_by {
  """Reference to the dataset this run is a part of"""
  dataset_id: order_by

  """Numeric identifier (May change!)"""
  id: order_by
}

"""aggregate stddev_pop on columns"""
type runs_stddev_pop_fields {
  """Reference to the dataset this run is a part of"""
  dataset_id: Float

  """Numeric identifier (May change!)"""
  id: Float
}

"""
order by stddev_pop() on columns of table "runs"
"""
input runs_stddev_pop_order_by {
  """Reference to the dataset this run is a part of"""
  dataset_id: order_by

  """Numeric identifier (May change!)"""
  id: order_by
}

"""aggregate stddev_samp on columns"""
type runs_stddev_samp_fields {
  """Reference to the dataset this run is a part of"""
  dataset_id: Float

  """Numeric identifier (May change!)"""
  id: Float
}

"""
order by stddev_samp() on columns of table "runs"
"""
input runs_stddev_samp_order_by {
  """Reference to the dataset this run is a part of"""
  dataset_id: order_by

  """Numeric identifier (May change!)"""
  id: order_by
}

"""aggregate sum on columns"""
type runs_sum_fields {
  """Reference to the dataset this run is a part of"""
  dataset_id: Int

  """Numeric identifier (May change!)"""
  id: Int
}

"""
order by sum() on columns of table "runs"
"""
input runs_sum_order_by {
  """Reference to the dataset this run is a part of"""
  dataset_id: order_by

  """Numeric identifier (May change!)"""
  id: order_by
}

"""aggregate var_pop on columns"""
type runs_var_pop_fields {
  """Reference to the dataset this run is a part of"""
  dataset_id: Float

  """Numeric identifier (May change!)"""
  id: Float
}

"""
order by var_pop() on columns of table "runs"
"""
input runs_var_pop_order_by {
  """Reference to the dataset this run is a part of"""
  dataset_id: order_by

  """Numeric identifier (May change!)"""
  id: order_by
}

"""aggregate var_samp on columns"""
type runs_var_samp_fields {
  """Reference to the dataset this run is a part of"""
  dataset_id: Float

  """Numeric identifier (May change!)"""
  id: Float
}

"""
order by var_samp() on columns of table "runs"
"""
input runs_var_samp_order_by {
  """Reference to the dataset this run is a part of"""
  dataset_id: order_by

  """Numeric identifier (May change!)"""
  id: order_by
}

"""aggregate variance on columns"""
type runs_variance_fields {
  """Reference to the dataset this run is a part of"""
  dataset_id: Float

  """Numeric identifier (May change!)"""
  id: Float
}

"""
order by variance() on columns of table "runs"
"""
input runs_variance_order_by {
  """Reference to the dataset this run is a part of"""
  dataset_id: order_by

  """Numeric identifier (May change!)"""
  id: order_by
}

type subscription_root {
  """
  fetch data from the table: "annotation_files"
  """
  annotation_files(
    """distinct select on columns"""
    distinct_on: [annotation_files_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotation_files_order_by!]

    """filter the rows returned"""
    where: annotation_files_bool_exp
  ): [annotation_files!]!

  """
  fetch aggregated fields from the table: "annotation_files"
  """
  annotation_files_aggregate(
    """distinct select on columns"""
    distinct_on: [annotation_files_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotation_files_order_by!]

    """filter the rows returned"""
    where: annotation_files_bool_exp
  ): annotation_files_aggregate!

  """
  fetch data from the table: "annotation_files" using primary key columns
  """
  annotation_files_by_pk(id: Int!): annotation_files

  """
  fetch data from the table in a streaming manner: "annotation_files"
  """
  annotation_files_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [annotation_files_stream_cursor_input]!

    """filter the rows returned"""
    where: annotation_files_bool_exp
  ): [annotation_files!]!

  """
  fetch data from the table: "tomogram_authors"
  """
  tomogram_authors(
    """distinct select on columns"""
    distinct_on: [tomogram_authors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomogram_authors_order_by!]

    """filter the rows returned"""
    where: tomogram_authors_bool_exp
  ): [tomogram_authors!]!

  """
  fetch aggregated fields from the table: "tomogram_authors"
  """
  tomogram_authors_aggregate(
    """distinct select on columns"""
    distinct_on: [tomogram_authors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomogram_authors_order_by!]

    """filter the rows returned"""
    where: tomogram_authors_bool_exp
  ): tomogram_authors_aggregate!

  """
  fetch data from the table: "tomogram_authors" using primary key columns
  """
  tomogram_authors_by_pk(
    """Numeric identifier for this tomogram author (this may change!)"""
    id: Int!
  ): tomogram_authors

  """
  fetch data from the table in a streaming manner: "tomogram_authors"
  """
  tomogram_authors_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [tomogram_authors_stream_cursor_input]!

    """filter the rows returned"""
    where: tomogram_authors_bool_exp
  ): [tomogram_authors!]!

  """
  fetch data from the table: "tomogram_type"
  """
  tomogram_type(
    """distinct select on columns"""
    distinct_on: [tomogram_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomogram_type_order_by!]

    """filter the rows returned"""
    where: tomogram_type_bool_exp
  ): [tomogram_type!]!

  """fetch data from the table: "tomogram_type" using primary key columns"""
  tomogram_type_by_pk(value: String!): tomogram_type

  """
  fetch data from the table in a streaming manner: "tomogram_type"
  """
  tomogram_type_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [tomogram_type_stream_cursor_input]!

    """filter the rows returned"""
    where: tomogram_type_bool_exp
  ): [tomogram_type!]!
}

"""Tilt Series Metadata"""
type tiltseries {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: Int!

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: Int

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: numeric

  """Name of the camera manufacturer"""
  camera_manufacturer: String!

  """Camera model name"""
  camera_model: String!

  """Software used to collect data"""
  data_acquisition_software: String!

  """Number of frames associated to the tilt series"""
  frames_count: Int
  https_alignment_file: String
  https_angle_list: String
  https_collection_metadata: String
  https_mrc_bin1: String!
  https_omezarr_dir: String!
  id: Int!

  """Tilt series is aligned"""
  is_aligned: Boolean!

  """
  Other microscope optical setup information, in addition to energy filter, phase plate and image corrector
  """
  microscope_additional_info: String

  """Energy filter setup used"""
  microscope_energy_filter: String!

  """Image corrector setup"""
  microscope_image_corrector: String

  """Name of the microscope manufacturer"""
  microscope_manufacturer: String!

  """Microscope model name"""
  microscope_model: String!

  """Phase plate configuration"""
  microscope_phase_plate: String

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: numeric

  """
  If a tilt series is deposited into EMPIAR, enter the EMPIAR dataset identifier
  """
  related_empiar_entry: String

  """An object relationship"""
  run: runs!
  run_id: Int!
  s3_alignment_file: String
  s3_angle_list: String
  s3_collection_metadata: String
  s3_mrc_bin1: String!
  s3_omezarr_dir: String!

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: numeric!

  """Rotation angle in degrees"""
  tilt_axis: numeric!

  """Maximal tilt angle in degrees"""
  tilt_max: numeric!

  """Minimal tilt angle in degrees"""
  tilt_min: numeric!

  """The difference between tilt_min and tilt_max"""
  tilt_range: numeric!

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: Int!
  tilt_step: numeric!

  """The order of stage tilting during acquisition of the data"""
  tilting_scheme: String!

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: numeric!
}

"""
aggregated selection of "tiltseries"
"""
type tiltseries_aggregate {
  aggregate: tiltseries_aggregate_fields
  nodes: [tiltseries!]!
}

input tiltseries_aggregate_bool_exp {
  bool_and: tiltseries_aggregate_bool_exp_bool_and
  bool_or: tiltseries_aggregate_bool_exp_bool_or
  count: tiltseries_aggregate_bool_exp_count
}

input tiltseries_aggregate_bool_exp_bool_and {
  arguments: tiltseries_select_column_tiltseries_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: tiltseries_bool_exp
  predicate: Boolean_comparison_exp!
}

input tiltseries_aggregate_bool_exp_bool_or {
  arguments: tiltseries_select_column_tiltseries_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: tiltseries_bool_exp
  predicate: Boolean_comparison_exp!
}

input tiltseries_aggregate_bool_exp_count {
  arguments: [tiltseries_select_column!]
  distinct: Boolean
  filter: tiltseries_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "tiltseries"
"""
type tiltseries_aggregate_fields {
  avg: tiltseries_avg_fields
  count(columns: [tiltseries_select_column!], distinct: Boolean): Int!
  max: tiltseries_max_fields
  min: tiltseries_min_fields
  stddev: tiltseries_stddev_fields
  stddev_pop: tiltseries_stddev_pop_fields
  stddev_samp: tiltseries_stddev_samp_fields
  sum: tiltseries_sum_fields
  var_pop: tiltseries_var_pop_fields
  var_samp: tiltseries_var_samp_fields
  variance: tiltseries_variance_fields
}

"""
order by aggregate values of table "tiltseries"
"""
input tiltseries_aggregate_order_by {
  avg: tiltseries_avg_order_by
  count: order_by
  max: tiltseries_max_order_by
  min: tiltseries_min_order_by
  stddev: tiltseries_stddev_order_by
  stddev_pop: tiltseries_stddev_pop_order_by
  stddev_samp: tiltseries_stddev_samp_order_by
  sum: tiltseries_sum_order_by
  var_pop: tiltseries_var_pop_order_by
  var_samp: tiltseries_var_samp_order_by
  variance: tiltseries_variance_order_by
}

"""aggregate avg on columns"""
type tiltseries_avg_fields {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: Float

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: Float

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: Float

  """Number of frames associated to the tilt series"""
  frames_count: Float
  id: Float

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: Float
  run_id: Float

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: Float

  """Rotation angle in degrees"""
  tilt_axis: Float

  """Maximal tilt angle in degrees"""
  tilt_max: Float

  """Minimal tilt angle in degrees"""
  tilt_min: Float

  """The difference between tilt_min and tilt_max"""
  tilt_range: Float

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: Float
  tilt_step: Float

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: Float
}

"""
order by avg() on columns of table "tiltseries"
"""
input tiltseries_avg_order_by {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: order_by

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: order_by

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: order_by

  """Number of frames associated to the tilt series"""
  frames_count: order_by
  id: order_by

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: order_by
  run_id: order_by

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: order_by

  """Rotation angle in degrees"""
  tilt_axis: order_by

  """Maximal tilt angle in degrees"""
  tilt_max: order_by

  """Minimal tilt angle in degrees"""
  tilt_min: order_by

  """The difference between tilt_min and tilt_max"""
  tilt_range: order_by

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: order_by
  tilt_step: order_by

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: order_by
}

"""
Boolean expression to filter rows from the table "tiltseries". All fields are combined with a logical 'AND'.
"""
input tiltseries_bool_exp {
  _and: [tiltseries_bool_exp!]
  _not: tiltseries_bool_exp
  _or: [tiltseries_bool_exp!]
  acceleration_voltage: Int_comparison_exp
  aligned_tiltseries_binning: Int_comparison_exp
  binning_from_frames: numeric_comparison_exp
  camera_manufacturer: String_comparison_exp
  camera_model: String_comparison_exp
  data_acquisition_software: String_comparison_exp
  frames_count: Int_comparison_exp
  https_alignment_file: String_comparison_exp
  https_angle_list: String_comparison_exp
  https_collection_metadata: String_comparison_exp
  https_mrc_bin1: String_comparison_exp
  https_omezarr_dir: String_comparison_exp
  id: Int_comparison_exp
  is_aligned: Boolean_comparison_exp
  microscope_additional_info: String_comparison_exp
  microscope_energy_filter: String_comparison_exp
  microscope_image_corrector: String_comparison_exp
  microscope_manufacturer: String_comparison_exp
  microscope_model: String_comparison_exp
  microscope_phase_plate: String_comparison_exp
  pixel_spacing: numeric_comparison_exp
  related_empiar_entry: String_comparison_exp
  run: runs_bool_exp
  run_id: Int_comparison_exp
  s3_alignment_file: String_comparison_exp
  s3_angle_list: String_comparison_exp
  s3_collection_metadata: String_comparison_exp
  s3_mrc_bin1: String_comparison_exp
  s3_omezarr_dir: String_comparison_exp
  spherical_aberration_constant: numeric_comparison_exp
  tilt_axis: numeric_comparison_exp
  tilt_max: numeric_comparison_exp
  tilt_min: numeric_comparison_exp
  tilt_range: numeric_comparison_exp
  tilt_series_quality: Int_comparison_exp
  tilt_step: numeric_comparison_exp
  tilting_scheme: String_comparison_exp
  total_flux: numeric_comparison_exp
}

"""aggregate max on columns"""
type tiltseries_max_fields {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: Int

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: Int

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: numeric

  """Name of the camera manufacturer"""
  camera_manufacturer: String

  """Camera model name"""
  camera_model: String

  """Software used to collect data"""
  data_acquisition_software: String

  """Number of frames associated to the tilt series"""
  frames_count: Int
  https_alignment_file: String
  https_angle_list: String
  https_collection_metadata: String
  https_mrc_bin1: String
  https_omezarr_dir: String
  id: Int

  """
  Other microscope optical setup information, in addition to energy filter, phase plate and image corrector
  """
  microscope_additional_info: String

  """Energy filter setup used"""
  microscope_energy_filter: String

  """Image corrector setup"""
  microscope_image_corrector: String

  """Name of the microscope manufacturer"""
  microscope_manufacturer: String

  """Microscope model name"""
  microscope_model: String

  """Phase plate configuration"""
  microscope_phase_plate: String

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: numeric

  """
  If a tilt series is deposited into EMPIAR, enter the EMPIAR dataset identifier
  """
  related_empiar_entry: String
  run_id: Int
  s3_alignment_file: String
  s3_angle_list: String
  s3_collection_metadata: String
  s3_mrc_bin1: String
  s3_omezarr_dir: String

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: numeric

  """Rotation angle in degrees"""
  tilt_axis: numeric

  """Maximal tilt angle in degrees"""
  tilt_max: numeric

  """Minimal tilt angle in degrees"""
  tilt_min: numeric

  """The difference between tilt_min and tilt_max"""
  tilt_range: numeric

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: Int
  tilt_step: numeric

  """The order of stage tilting during acquisition of the data"""
  tilting_scheme: String

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: numeric
}

"""
order by max() on columns of table "tiltseries"
"""
input tiltseries_max_order_by {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: order_by

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: order_by

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: order_by

  """Name of the camera manufacturer"""
  camera_manufacturer: order_by

  """Camera model name"""
  camera_model: order_by

  """Software used to collect data"""
  data_acquisition_software: order_by

  """Number of frames associated to the tilt series"""
  frames_count: order_by
  https_alignment_file: order_by
  https_angle_list: order_by
  https_collection_metadata: order_by
  https_mrc_bin1: order_by
  https_omezarr_dir: order_by
  id: order_by

  """
  Other microscope optical setup information, in addition to energy filter, phase plate and image corrector
  """
  microscope_additional_info: order_by

  """Energy filter setup used"""
  microscope_energy_filter: order_by

  """Image corrector setup"""
  microscope_image_corrector: order_by

  """Name of the microscope manufacturer"""
  microscope_manufacturer: order_by

  """Microscope model name"""
  microscope_model: order_by

  """Phase plate configuration"""
  microscope_phase_plate: order_by

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: order_by

  """
  If a tilt series is deposited into EMPIAR, enter the EMPIAR dataset identifier
  """
  related_empiar_entry: order_by
  run_id: order_by
  s3_alignment_file: order_by
  s3_angle_list: order_by
  s3_collection_metadata: order_by
  s3_mrc_bin1: order_by
  s3_omezarr_dir: order_by

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: order_by

  """Rotation angle in degrees"""
  tilt_axis: order_by

  """Maximal tilt angle in degrees"""
  tilt_max: order_by

  """Minimal tilt angle in degrees"""
  tilt_min: order_by

  """The difference between tilt_min and tilt_max"""
  tilt_range: order_by

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: order_by
  tilt_step: order_by

  """The order of stage tilting during acquisition of the data"""
  tilting_scheme: order_by

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: order_by
}

"""aggregate min on columns"""
type tiltseries_min_fields {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: Int

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: Int

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: numeric

  """Name of the camera manufacturer"""
  camera_manufacturer: String

  """Camera model name"""
  camera_model: String

  """Software used to collect data"""
  data_acquisition_software: String

  """Number of frames associated to the tilt series"""
  frames_count: Int
  https_alignment_file: String
  https_angle_list: String
  https_collection_metadata: String
  https_mrc_bin1: String
  https_omezarr_dir: String
  id: Int

  """
  Other microscope optical setup information, in addition to energy filter, phase plate and image corrector
  """
  microscope_additional_info: String

  """Energy filter setup used"""
  microscope_energy_filter: String

  """Image corrector setup"""
  microscope_image_corrector: String

  """Name of the microscope manufacturer"""
  microscope_manufacturer: String

  """Microscope model name"""
  microscope_model: String

  """Phase plate configuration"""
  microscope_phase_plate: String

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: numeric

  """
  If a tilt series is deposited into EMPIAR, enter the EMPIAR dataset identifier
  """
  related_empiar_entry: String
  run_id: Int
  s3_alignment_file: String
  s3_angle_list: String
  s3_collection_metadata: String
  s3_mrc_bin1: String
  s3_omezarr_dir: String

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: numeric

  """Rotation angle in degrees"""
  tilt_axis: numeric

  """Maximal tilt angle in degrees"""
  tilt_max: numeric

  """Minimal tilt angle in degrees"""
  tilt_min: numeric

  """The difference between tilt_min and tilt_max"""
  tilt_range: numeric

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: Int
  tilt_step: numeric

  """The order of stage tilting during acquisition of the data"""
  tilting_scheme: String

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: numeric
}

"""
order by min() on columns of table "tiltseries"
"""
input tiltseries_min_order_by {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: order_by

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: order_by

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: order_by

  """Name of the camera manufacturer"""
  camera_manufacturer: order_by

  """Camera model name"""
  camera_model: order_by

  """Software used to collect data"""
  data_acquisition_software: order_by

  """Number of frames associated to the tilt series"""
  frames_count: order_by
  https_alignment_file: order_by
  https_angle_list: order_by
  https_collection_metadata: order_by
  https_mrc_bin1: order_by
  https_omezarr_dir: order_by
  id: order_by

  """
  Other microscope optical setup information, in addition to energy filter, phase plate and image corrector
  """
  microscope_additional_info: order_by

  """Energy filter setup used"""
  microscope_energy_filter: order_by

  """Image corrector setup"""
  microscope_image_corrector: order_by

  """Name of the microscope manufacturer"""
  microscope_manufacturer: order_by

  """Microscope model name"""
  microscope_model: order_by

  """Phase plate configuration"""
  microscope_phase_plate: order_by

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: order_by

  """
  If a tilt series is deposited into EMPIAR, enter the EMPIAR dataset identifier
  """
  related_empiar_entry: order_by
  run_id: order_by
  s3_alignment_file: order_by
  s3_angle_list: order_by
  s3_collection_metadata: order_by
  s3_mrc_bin1: order_by
  s3_omezarr_dir: order_by

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: order_by

  """Rotation angle in degrees"""
  tilt_axis: order_by

  """Maximal tilt angle in degrees"""
  tilt_max: order_by

  """Minimal tilt angle in degrees"""
  tilt_min: order_by

  """The difference between tilt_min and tilt_max"""
  tilt_range: order_by

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: order_by
  tilt_step: order_by

  """The order of stage tilting during acquisition of the data"""
  tilting_scheme: order_by

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: order_by
}

"""Ordering options when selecting data from "tiltseries"."""
input tiltseries_order_by {
  acceleration_voltage: order_by
  aligned_tiltseries_binning: order_by
  binning_from_frames: order_by
  camera_manufacturer: order_by
  camera_model: order_by
  data_acquisition_software: order_by
  frames_count: order_by
  https_alignment_file: order_by
  https_angle_list: order_by
  https_collection_metadata: order_by
  https_mrc_bin1: order_by
  https_omezarr_dir: order_by
  id: order_by
  is_aligned: order_by
  microscope_additional_info: order_by
  microscope_energy_filter: order_by
  microscope_image_corrector: order_by
  microscope_manufacturer: order_by
  microscope_model: order_by
  microscope_phase_plate: order_by
  pixel_spacing: order_by
  related_empiar_entry: order_by
  run: runs_order_by
  run_id: order_by
  s3_alignment_file: order_by
  s3_angle_list: order_by
  s3_collection_metadata: order_by
  s3_mrc_bin1: order_by
  s3_omezarr_dir: order_by
  spherical_aberration_constant: order_by
  tilt_axis: order_by
  tilt_max: order_by
  tilt_min: order_by
  tilt_range: order_by
  tilt_series_quality: order_by
  tilt_step: order_by
  tilting_scheme: order_by
  total_flux: order_by
}

"""
select columns of table "tiltseries"
"""
enum tiltseries_select_column {
  """column name"""
  acceleration_voltage

  """column name"""
  aligned_tiltseries_binning

  """column name"""
  binning_from_frames

  """column name"""
  camera_manufacturer

  """column name"""
  camera_model

  """column name"""
  data_acquisition_software

  """column name"""
  frames_count

  """column name"""
  https_alignment_file

  """column name"""
  https_angle_list

  """column name"""
  https_collection_metadata

  """column name"""
  https_mrc_bin1

  """column name"""
  https_omezarr_dir

  """column name"""
  id

  """column name"""
  is_aligned

  """column name"""
  microscope_additional_info

  """column name"""
  microscope_energy_filter

  """column name"""
  microscope_image_corrector

  """column name"""
  microscope_manufacturer

  """column name"""
  microscope_model

  """column name"""
  microscope_phase_plate

  """column name"""
  pixel_spacing

  """column name"""
  related_empiar_entry

  """column name"""
  run_id

  """column name"""
  s3_alignment_file

  """column name"""
  s3_angle_list

  """column name"""
  s3_collection_metadata

  """column name"""
  s3_mrc_bin1

  """column name"""
  s3_omezarr_dir

  """column name"""
  spherical_aberration_constant

  """column name"""
  tilt_axis

  """column name"""
  tilt_max

  """column name"""
  tilt_min

  """column name"""
  tilt_range

  """column name"""
  tilt_series_quality

  """column name"""
  tilt_step

  """column name"""
  tilting_scheme

  """column name"""
  total_flux
}

"""
select "tiltseries_aggregate_bool_exp_bool_and_arguments_columns" columns of table "tiltseries"
"""
enum tiltseries_select_column_tiltseries_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  is_aligned
}

"""
select "tiltseries_aggregate_bool_exp_bool_or_arguments_columns" columns of table "tiltseries"
"""
enum tiltseries_select_column_tiltseries_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  is_aligned
}

"""aggregate stddev on columns"""
type tiltseries_stddev_fields {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: Float

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: Float

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: Float

  """Number of frames associated to the tilt series"""
  frames_count: Float
  id: Float

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: Float
  run_id: Float

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: Float

  """Rotation angle in degrees"""
  tilt_axis: Float

  """Maximal tilt angle in degrees"""
  tilt_max: Float

  """Minimal tilt angle in degrees"""
  tilt_min: Float

  """The difference between tilt_min and tilt_max"""
  tilt_range: Float

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: Float
  tilt_step: Float

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: Float
}

"""
order by stddev() on columns of table "tiltseries"
"""
input tiltseries_stddev_order_by {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: order_by

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: order_by

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: order_by

  """Number of frames associated to the tilt series"""
  frames_count: order_by
  id: order_by

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: order_by
  run_id: order_by

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: order_by

  """Rotation angle in degrees"""
  tilt_axis: order_by

  """Maximal tilt angle in degrees"""
  tilt_max: order_by

  """Minimal tilt angle in degrees"""
  tilt_min: order_by

  """The difference between tilt_min and tilt_max"""
  tilt_range: order_by

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: order_by
  tilt_step: order_by

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: order_by
}

"""aggregate stddev_pop on columns"""
type tiltseries_stddev_pop_fields {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: Float

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: Float

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: Float

  """Number of frames associated to the tilt series"""
  frames_count: Float
  id: Float

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: Float
  run_id: Float

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: Float

  """Rotation angle in degrees"""
  tilt_axis: Float

  """Maximal tilt angle in degrees"""
  tilt_max: Float

  """Minimal tilt angle in degrees"""
  tilt_min: Float

  """The difference between tilt_min and tilt_max"""
  tilt_range: Float

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: Float
  tilt_step: Float

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: Float
}

"""
order by stddev_pop() on columns of table "tiltseries"
"""
input tiltseries_stddev_pop_order_by {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: order_by

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: order_by

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: order_by

  """Number of frames associated to the tilt series"""
  frames_count: order_by
  id: order_by

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: order_by
  run_id: order_by

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: order_by

  """Rotation angle in degrees"""
  tilt_axis: order_by

  """Maximal tilt angle in degrees"""
  tilt_max: order_by

  """Minimal tilt angle in degrees"""
  tilt_min: order_by

  """The difference between tilt_min and tilt_max"""
  tilt_range: order_by

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: order_by
  tilt_step: order_by

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: order_by
}

"""aggregate stddev_samp on columns"""
type tiltseries_stddev_samp_fields {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: Float

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: Float

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: Float

  """Number of frames associated to the tilt series"""
  frames_count: Float
  id: Float

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: Float
  run_id: Float

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: Float

  """Rotation angle in degrees"""
  tilt_axis: Float

  """Maximal tilt angle in degrees"""
  tilt_max: Float

  """Minimal tilt angle in degrees"""
  tilt_min: Float

  """The difference between tilt_min and tilt_max"""
  tilt_range: Float

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: Float
  tilt_step: Float

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: Float
}

"""
order by stddev_samp() on columns of table "tiltseries"
"""
input tiltseries_stddev_samp_order_by {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: order_by

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: order_by

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: order_by

  """Number of frames associated to the tilt series"""
  frames_count: order_by
  id: order_by

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: order_by
  run_id: order_by

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: order_by

  """Rotation angle in degrees"""
  tilt_axis: order_by

  """Maximal tilt angle in degrees"""
  tilt_max: order_by

  """Minimal tilt angle in degrees"""
  tilt_min: order_by

  """The difference between tilt_min and tilt_max"""
  tilt_range: order_by

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: order_by
  tilt_step: order_by

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: order_by
}

"""aggregate sum on columns"""
type tiltseries_sum_fields {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: Int

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: Int

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: numeric

  """Number of frames associated to the tilt series"""
  frames_count: Int
  id: Int

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: numeric
  run_id: Int

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: numeric

  """Rotation angle in degrees"""
  tilt_axis: numeric

  """Maximal tilt angle in degrees"""
  tilt_max: numeric

  """Minimal tilt angle in degrees"""
  tilt_min: numeric

  """The difference between tilt_min and tilt_max"""
  tilt_range: numeric

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: Int
  tilt_step: numeric

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: numeric
}

"""
order by sum() on columns of table "tiltseries"
"""
input tiltseries_sum_order_by {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: order_by

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: order_by

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: order_by

  """Number of frames associated to the tilt series"""
  frames_count: order_by
  id: order_by

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: order_by
  run_id: order_by

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: order_by

  """Rotation angle in degrees"""
  tilt_axis: order_by

  """Maximal tilt angle in degrees"""
  tilt_max: order_by

  """Minimal tilt angle in degrees"""
  tilt_min: order_by

  """The difference between tilt_min and tilt_max"""
  tilt_range: order_by

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: order_by
  tilt_step: order_by

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: order_by
}

"""aggregate var_pop on columns"""
type tiltseries_var_pop_fields {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: Float

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: Float

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: Float

  """Number of frames associated to the tilt series"""
  frames_count: Float
  id: Float

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: Float
  run_id: Float

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: Float

  """Rotation angle in degrees"""
  tilt_axis: Float

  """Maximal tilt angle in degrees"""
  tilt_max: Float

  """Minimal tilt angle in degrees"""
  tilt_min: Float

  """The difference between tilt_min and tilt_max"""
  tilt_range: Float

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: Float
  tilt_step: Float

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: Float
}

"""
order by var_pop() on columns of table "tiltseries"
"""
input tiltseries_var_pop_order_by {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: order_by

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: order_by

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: order_by

  """Number of frames associated to the tilt series"""
  frames_count: order_by
  id: order_by

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: order_by
  run_id: order_by

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: order_by

  """Rotation angle in degrees"""
  tilt_axis: order_by

  """Maximal tilt angle in degrees"""
  tilt_max: order_by

  """Minimal tilt angle in degrees"""
  tilt_min: order_by

  """The difference between tilt_min and tilt_max"""
  tilt_range: order_by

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: order_by
  tilt_step: order_by

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: order_by
}

"""aggregate var_samp on columns"""
type tiltseries_var_samp_fields {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: Float

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: Float

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: Float

  """Number of frames associated to the tilt series"""
  frames_count: Float
  id: Float

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: Float
  run_id: Float

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: Float

  """Rotation angle in degrees"""
  tilt_axis: Float

  """Maximal tilt angle in degrees"""
  tilt_max: Float

  """Minimal tilt angle in degrees"""
  tilt_min: Float

  """The difference between tilt_min and tilt_max"""
  tilt_range: Float

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: Float
  tilt_step: Float

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: Float
}

"""
order by var_samp() on columns of table "tiltseries"
"""
input tiltseries_var_samp_order_by {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: order_by

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: order_by

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: order_by

  """Number of frames associated to the tilt series"""
  frames_count: order_by
  id: order_by

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: order_by
  run_id: order_by

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: order_by

  """Rotation angle in degrees"""
  tilt_axis: order_by

  """Maximal tilt angle in degrees"""
  tilt_max: order_by

  """Minimal tilt angle in degrees"""
  tilt_min: order_by

  """The difference between tilt_min and tilt_max"""
  tilt_range: order_by

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: order_by
  tilt_step: order_by

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: order_by
}

"""aggregate variance on columns"""
type tiltseries_variance_fields {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: Float

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: Float

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: Float

  """Number of frames associated to the tilt series"""
  frames_count: Float
  id: Float

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: Float
  run_id: Float

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: Float

  """Rotation angle in degrees"""
  tilt_axis: Float

  """Maximal tilt angle in degrees"""
  tilt_max: Float

  """Minimal tilt angle in degrees"""
  tilt_min: Float

  """The difference between tilt_min and tilt_max"""
  tilt_range: Float

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: Float
  tilt_step: Float

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: Float
}

"""
order by variance() on columns of table "tiltseries"
"""
input tiltseries_variance_order_by {
  """Electron Microscope Accelerator voltage in volts"""
  acceleration_voltage: order_by

  """
  The binning factor between the unaligned tilt series and the aligned tiltseries.
  """
  aligned_tiltseries_binning: order_by

  """Describes the binning factor from frames to tilt series file"""
  binning_from_frames: order_by

  """Number of frames associated to the tilt series"""
  frames_count: order_by
  id: order_by

  """Pixel spacing equal in both axes in angstrom"""
  pixel_spacing: order_by
  run_id: order_by

  """Spherical Aberration Constant of the objective lens in millimeters"""
  spherical_aberration_constant: order_by

  """Rotation angle in degrees"""
  tilt_axis: order_by

  """Maximal tilt angle in degrees"""
  tilt_max: order_by

  """Minimal tilt angle in degrees"""
  tilt_min: order_by

  """The difference between tilt_min and tilt_max"""
  tilt_range: order_by

  """
  Author assessment of tilt series quality within the dataset (1-5, 5 is best)
  """
  tilt_series_quality: order_by
  tilt_step: order_by

  """
  Number of Electrons reaching the specimen in a square Angstrom area for the entire tilt series
  """
  total_flux: order_by
}

"""Authors for a tomogram"""
type tomogram_authors {
  """Address of the institution an annotator is affiliated with."""
  affiliation_address: String

  """
  A unique identifier assigned to the affiliated institution by The Research Organization Registry (ROR).
  """
  affiliation_identifier: String

  """
  Name of the institution an annotator is affiliated with. Sometimes, one annotator may have multiple affiliations.
  """
  affiliation_name: String

  """The order in which the author appears in the publication"""
  author_list_order: Int!

  """Indicating whether an author is the corresponding author (YES or NO)"""
  corresponding_author_status: Boolean

  """Email address for this author"""
  email: String

  """Numeric identifier for this tomogram author (this may change!)"""
  id: Int!

  """Full name of an tomogram author (e.g. Jane Doe)."""
  name: String!

  """A unique, persistent identifier for researchers, provided by ORCID."""
  orcid: String

  """
  Indicating whether an author is the main person creating the tomogram (YES or NO)
  """
  primary_author_status: Boolean

  """An object relationship"""
  tomogram: tomograms!

  """Reference to the tomogram this author contributed to"""
  tomogram_id: Int!
}

"""
aggregated selection of "tomogram_authors"
"""
type tomogram_authors_aggregate {
  aggregate: tomogram_authors_aggregate_fields
  nodes: [tomogram_authors!]!
}

input tomogram_authors_aggregate_bool_exp {
  bool_and: tomogram_authors_aggregate_bool_exp_bool_and
  bool_or: tomogram_authors_aggregate_bool_exp_bool_or
  count: tomogram_authors_aggregate_bool_exp_count
}

input tomogram_authors_aggregate_bool_exp_bool_and {
  arguments: tomogram_authors_select_column_tomogram_authors_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: tomogram_authors_bool_exp
  predicate: Boolean_comparison_exp!
}

input tomogram_authors_aggregate_bool_exp_bool_or {
  arguments: tomogram_authors_select_column_tomogram_authors_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: tomogram_authors_bool_exp
  predicate: Boolean_comparison_exp!
}

input tomogram_authors_aggregate_bool_exp_count {
  arguments: [tomogram_authors_select_column!]
  distinct: Boolean
  filter: tomogram_authors_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "tomogram_authors"
"""
type tomogram_authors_aggregate_fields {
  avg: tomogram_authors_avg_fields
  count(columns: [tomogram_authors_select_column!], distinct: Boolean): Int!
  max: tomogram_authors_max_fields
  min: tomogram_authors_min_fields
  stddev: tomogram_authors_stddev_fields
  stddev_pop: tomogram_authors_stddev_pop_fields
  stddev_samp: tomogram_authors_stddev_samp_fields
  sum: tomogram_authors_sum_fields
  var_pop: tomogram_authors_var_pop_fields
  var_samp: tomogram_authors_var_samp_fields
  variance: tomogram_authors_variance_fields
}

"""
order by aggregate values of table "tomogram_authors"
"""
input tomogram_authors_aggregate_order_by {
  avg: tomogram_authors_avg_order_by
  count: order_by
  max: tomogram_authors_max_order_by
  min: tomogram_authors_min_order_by
  stddev: tomogram_authors_stddev_order_by
  stddev_pop: tomogram_authors_stddev_pop_order_by
  stddev_samp: tomogram_authors_stddev_samp_order_by
  sum: tomogram_authors_sum_order_by
  var_pop: tomogram_authors_var_pop_order_by
  var_samp: tomogram_authors_var_samp_order_by
  variance: tomogram_authors_variance_order_by
}

"""aggregate avg on columns"""
type tomogram_authors_avg_fields {
  """The order in which the author appears in the publication"""
  author_list_order: Float

  """Numeric identifier for this tomogram author (this may change!)"""
  id: Float

  """Reference to the tomogram this author contributed to"""
  tomogram_id: Float
}

"""
order by avg() on columns of table "tomogram_authors"
"""
input tomogram_authors_avg_order_by {
  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Numeric identifier for this tomogram author (this may change!)"""
  id: order_by

  """Reference to the tomogram this author contributed to"""
  tomogram_id: order_by
}

"""
Boolean expression to filter rows from the table "tomogram_authors". All fields are combined with a logical 'AND'.
"""
input tomogram_authors_bool_exp {
  _and: [tomogram_authors_bool_exp!]
  _not: tomogram_authors_bool_exp
  _or: [tomogram_authors_bool_exp!]
  affiliation_address: String_comparison_exp
  affiliation_identifier: String_comparison_exp
  affiliation_name: String_comparison_exp
  author_list_order: Int_comparison_exp
  corresponding_author_status: Boolean_comparison_exp
  email: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  orcid: String_comparison_exp
  primary_author_status: Boolean_comparison_exp
  tomogram: tomograms_bool_exp
  tomogram_id: Int_comparison_exp
}

"""aggregate max on columns"""
type tomogram_authors_max_fields {
  """Address of the institution an annotator is affiliated with."""
  affiliation_address: String

  """
  A unique identifier assigned to the affiliated institution by The Research Organization Registry (ROR).
  """
  affiliation_identifier: String

  """
  Name of the institution an annotator is affiliated with. Sometimes, one annotator may have multiple affiliations.
  """
  affiliation_name: String

  """The order in which the author appears in the publication"""
  author_list_order: Int

  """Email address for this author"""
  email: String

  """Numeric identifier for this tomogram author (this may change!)"""
  id: Int

  """Full name of an tomogram author (e.g. Jane Doe)."""
  name: String

  """A unique, persistent identifier for researchers, provided by ORCID."""
  orcid: String

  """Reference to the tomogram this author contributed to"""
  tomogram_id: Int
}

"""
order by max() on columns of table "tomogram_authors"
"""
input tomogram_authors_max_order_by {
  """Address of the institution an annotator is affiliated with."""
  affiliation_address: order_by

  """
  A unique identifier assigned to the affiliated institution by The Research Organization Registry (ROR).
  """
  affiliation_identifier: order_by

  """
  Name of the institution an annotator is affiliated with. Sometimes, one annotator may have multiple affiliations.
  """
  affiliation_name: order_by

  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Email address for this author"""
  email: order_by

  """Numeric identifier for this tomogram author (this may change!)"""
  id: order_by

  """Full name of an tomogram author (e.g. Jane Doe)."""
  name: order_by

  """A unique, persistent identifier for researchers, provided by ORCID."""
  orcid: order_by

  """Reference to the tomogram this author contributed to"""
  tomogram_id: order_by
}

"""aggregate min on columns"""
type tomogram_authors_min_fields {
  """Address of the institution an annotator is affiliated with."""
  affiliation_address: String

  """
  A unique identifier assigned to the affiliated institution by The Research Organization Registry (ROR).
  """
  affiliation_identifier: String

  """
  Name of the institution an annotator is affiliated with. Sometimes, one annotator may have multiple affiliations.
  """
  affiliation_name: String

  """The order in which the author appears in the publication"""
  author_list_order: Int

  """Email address for this author"""
  email: String

  """Numeric identifier for this tomogram author (this may change!)"""
  id: Int

  """Full name of an tomogram author (e.g. Jane Doe)."""
  name: String

  """A unique, persistent identifier for researchers, provided by ORCID."""
  orcid: String

  """Reference to the tomogram this author contributed to"""
  tomogram_id: Int
}

"""
order by min() on columns of table "tomogram_authors"
"""
input tomogram_authors_min_order_by {
  """Address of the institution an annotator is affiliated with."""
  affiliation_address: order_by

  """
  A unique identifier assigned to the affiliated institution by The Research Organization Registry (ROR).
  """
  affiliation_identifier: order_by

  """
  Name of the institution an annotator is affiliated with. Sometimes, one annotator may have multiple affiliations.
  """
  affiliation_name: order_by

  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Email address for this author"""
  email: order_by

  """Numeric identifier for this tomogram author (this may change!)"""
  id: order_by

  """Full name of an tomogram author (e.g. Jane Doe)."""
  name: order_by

  """A unique, persistent identifier for researchers, provided by ORCID."""
  orcid: order_by

  """Reference to the tomogram this author contributed to"""
  tomogram_id: order_by
}

"""Ordering options when selecting data from "tomogram_authors"."""
input tomogram_authors_order_by {
  affiliation_address: order_by
  affiliation_identifier: order_by
  affiliation_name: order_by
  author_list_order: order_by
  corresponding_author_status: order_by
  email: order_by
  id: order_by
  name: order_by
  orcid: order_by
  primary_author_status: order_by
  tomogram: tomograms_order_by
  tomogram_id: order_by
}

"""
select columns of table "tomogram_authors"
"""
enum tomogram_authors_select_column {
  """column name"""
  affiliation_address

  """column name"""
  affiliation_identifier

  """column name"""
  affiliation_name

  """column name"""
  author_list_order

  """column name"""
  corresponding_author_status

  """column name"""
  email

  """column name"""
  id

  """column name"""
  name

  """column name"""
  orcid

  """column name"""
  primary_author_status

  """column name"""
  tomogram_id
}

"""
select "tomogram_authors_aggregate_bool_exp_bool_and_arguments_columns" columns of table "tomogram_authors"
"""
enum tomogram_authors_select_column_tomogram_authors_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  corresponding_author_status

  """column name"""
  primary_author_status
}

"""
select "tomogram_authors_aggregate_bool_exp_bool_or_arguments_columns" columns of table "tomogram_authors"
"""
enum tomogram_authors_select_column_tomogram_authors_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  corresponding_author_status

  """column name"""
  primary_author_status
}

"""aggregate stddev on columns"""
type tomogram_authors_stddev_fields {
  """The order in which the author appears in the publication"""
  author_list_order: Float

  """Numeric identifier for this tomogram author (this may change!)"""
  id: Float

  """Reference to the tomogram this author contributed to"""
  tomogram_id: Float
}

"""
order by stddev() on columns of table "tomogram_authors"
"""
input tomogram_authors_stddev_order_by {
  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Numeric identifier for this tomogram author (this may change!)"""
  id: order_by

  """Reference to the tomogram this author contributed to"""
  tomogram_id: order_by
}

"""aggregate stddev_pop on columns"""
type tomogram_authors_stddev_pop_fields {
  """The order in which the author appears in the publication"""
  author_list_order: Float

  """Numeric identifier for this tomogram author (this may change!)"""
  id: Float

  """Reference to the tomogram this author contributed to"""
  tomogram_id: Float
}

"""
order by stddev_pop() on columns of table "tomogram_authors"
"""
input tomogram_authors_stddev_pop_order_by {
  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Numeric identifier for this tomogram author (this may change!)"""
  id: order_by

  """Reference to the tomogram this author contributed to"""
  tomogram_id: order_by
}

"""aggregate stddev_samp on columns"""
type tomogram_authors_stddev_samp_fields {
  """The order in which the author appears in the publication"""
  author_list_order: Float

  """Numeric identifier for this tomogram author (this may change!)"""
  id: Float

  """Reference to the tomogram this author contributed to"""
  tomogram_id: Float
}

"""
order by stddev_samp() on columns of table "tomogram_authors"
"""
input tomogram_authors_stddev_samp_order_by {
  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Numeric identifier for this tomogram author (this may change!)"""
  id: order_by

  """Reference to the tomogram this author contributed to"""
  tomogram_id: order_by
}

"""
Streaming cursor of the table "tomogram_authors"
"""
input tomogram_authors_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: tomogram_authors_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input tomogram_authors_stream_cursor_value_input {
  """Address of the institution an annotator is affiliated with."""
  affiliation_address: String

  """
  A unique identifier assigned to the affiliated institution by The Research Organization Registry (ROR).
  """
  affiliation_identifier: String

  """
  Name of the institution an annotator is affiliated with. Sometimes, one annotator may have multiple affiliations.
  """
  affiliation_name: String

  """The order in which the author appears in the publication"""
  author_list_order: Int

  """Indicating whether an author is the corresponding author (YES or NO)"""
  corresponding_author_status: Boolean

  """Email address for this author"""
  email: String

  """Numeric identifier for this tomogram author (this may change!)"""
  id: Int

  """Full name of an tomogram author (e.g. Jane Doe)."""
  name: String

  """A unique, persistent identifier for researchers, provided by ORCID."""
  orcid: String

  """
  Indicating whether an author is the main person creating the tomogram (YES or NO)
  """
  primary_author_status: Boolean

  """Reference to the tomogram this author contributed to"""
  tomogram_id: Int
}

"""aggregate sum on columns"""
type tomogram_authors_sum_fields {
  """The order in which the author appears in the publication"""
  author_list_order: Int

  """Numeric identifier for this tomogram author (this may change!)"""
  id: Int

  """Reference to the tomogram this author contributed to"""
  tomogram_id: Int
}

"""
order by sum() on columns of table "tomogram_authors"
"""
input tomogram_authors_sum_order_by {
  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Numeric identifier for this tomogram author (this may change!)"""
  id: order_by

  """Reference to the tomogram this author contributed to"""
  tomogram_id: order_by
}

"""aggregate var_pop on columns"""
type tomogram_authors_var_pop_fields {
  """The order in which the author appears in the publication"""
  author_list_order: Float

  """Numeric identifier for this tomogram author (this may change!)"""
  id: Float

  """Reference to the tomogram this author contributed to"""
  tomogram_id: Float
}

"""
order by var_pop() on columns of table "tomogram_authors"
"""
input tomogram_authors_var_pop_order_by {
  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Numeric identifier for this tomogram author (this may change!)"""
  id: order_by

  """Reference to the tomogram this author contributed to"""
  tomogram_id: order_by
}

"""aggregate var_samp on columns"""
type tomogram_authors_var_samp_fields {
  """The order in which the author appears in the publication"""
  author_list_order: Float

  """Numeric identifier for this tomogram author (this may change!)"""
  id: Float

  """Reference to the tomogram this author contributed to"""
  tomogram_id: Float
}

"""
order by var_samp() on columns of table "tomogram_authors"
"""
input tomogram_authors_var_samp_order_by {
  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Numeric identifier for this tomogram author (this may change!)"""
  id: order_by

  """Reference to the tomogram this author contributed to"""
  tomogram_id: order_by
}

"""aggregate variance on columns"""
type tomogram_authors_variance_fields {
  """The order in which the author appears in the publication"""
  author_list_order: Float

  """Numeric identifier for this tomogram author (this may change!)"""
  id: Float

  """Reference to the tomogram this author contributed to"""
  tomogram_id: Float
}

"""
order by variance() on columns of table "tomogram_authors"
"""
input tomogram_authors_variance_order_by {
  """The order in which the author appears in the publication"""
  author_list_order: order_by

  """Numeric identifier for this tomogram author (this may change!)"""
  id: order_by

  """Reference to the tomogram this author contributed to"""
  tomogram_id: order_by
}

"""The type of tomograms"""
type tomogram_type {
  description: String

  """An array relationship"""
  tomograms(
    """distinct select on columns"""
    distinct_on: [tomograms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomograms_order_by!]

    """filter the rows returned"""
    where: tomograms_bool_exp
  ): [tomograms!]!

  """An aggregate relationship"""
  tomograms_aggregate(
    """distinct select on columns"""
    distinct_on: [tomograms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomograms_order_by!]

    """filter the rows returned"""
    where: tomograms_bool_exp
  ): tomograms_aggregate!
  value: String!
}

"""
Boolean expression to filter rows from the table "tomogram_type". All fields are combined with a logical 'AND'.
"""
input tomogram_type_bool_exp {
  _and: [tomogram_type_bool_exp!]
  _not: tomogram_type_bool_exp
  _or: [tomogram_type_bool_exp!]
  description: String_comparison_exp
  tomograms: tomograms_bool_exp
  tomograms_aggregate: tomograms_aggregate_bool_exp
  value: String_comparison_exp
}

enum tomogram_type_enum {
  """"""
  CANONICAL

  """"""
  UNKOWN
}

"""
Boolean expression to compare columns of type "tomogram_type_enum". All fields are combined with logical 'AND'.
"""
input tomogram_type_enum_comparison_exp {
  _eq: tomogram_type_enum
  _in: [tomogram_type_enum!]
  _is_null: Boolean
  _neq: tomogram_type_enum
  _nin: [tomogram_type_enum!]
}

"""Ordering options when selecting data from "tomogram_type"."""
input tomogram_type_order_by {
  description: order_by
  tomograms_aggregate: tomograms_aggregate_order_by
  value: order_by
}

"""
select columns of table "tomogram_type"
"""
enum tomogram_type_select_column {
  """column name"""
  description

  """column name"""
  value
}

"""
Streaming cursor of the table "tomogram_type"
"""
input tomogram_type_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: tomogram_type_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input tomogram_type_stream_cursor_value_input {
  description: String
  value: String
}

"""The tomograms for each run are grouped by their voxel spacing"""
type tomogram_voxel_spacings {
  """An array relationship"""
  annotations(
    """distinct select on columns"""
    distinct_on: [annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotations_order_by!]

    """filter the rows returned"""
    where: annotations_bool_exp
  ): [annotations!]!

  """An aggregate relationship"""
  annotations_aggregate(
    """distinct select on columns"""
    distinct_on: [annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotations_order_by!]

    """filter the rows returned"""
    where: annotations_bool_exp
  ): annotations_aggregate!
  https_prefix: String
  id: Int!

  """An object relationship"""
  run: runs!
  run_id: Int!
  s3_prefix: String

  """An array relationship"""
  tomograms(
    """distinct select on columns"""
    distinct_on: [tomograms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomograms_order_by!]

    """filter the rows returned"""
    where: tomograms_bool_exp
  ): [tomograms!]!

  """An aggregate relationship"""
  tomograms_aggregate(
    """distinct select on columns"""
    distinct_on: [tomograms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomograms_order_by!]

    """filter the rows returned"""
    where: tomograms_bool_exp
  ): tomograms_aggregate!
  voxel_spacing: numeric!
}

"""
aggregated selection of "tomogram_voxel_spacings"
"""
type tomogram_voxel_spacings_aggregate {
  aggregate: tomogram_voxel_spacings_aggregate_fields
  nodes: [tomogram_voxel_spacings!]!
}

input tomogram_voxel_spacings_aggregate_bool_exp {
  count: tomogram_voxel_spacings_aggregate_bool_exp_count
}

input tomogram_voxel_spacings_aggregate_bool_exp_count {
  arguments: [tomogram_voxel_spacings_select_column!]
  distinct: Boolean
  filter: tomogram_voxel_spacings_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "tomogram_voxel_spacings"
"""
type tomogram_voxel_spacings_aggregate_fields {
  avg: tomogram_voxel_spacings_avg_fields
  count(columns: [tomogram_voxel_spacings_select_column!], distinct: Boolean): Int!
  max: tomogram_voxel_spacings_max_fields
  min: tomogram_voxel_spacings_min_fields
  stddev: tomogram_voxel_spacings_stddev_fields
  stddev_pop: tomogram_voxel_spacings_stddev_pop_fields
  stddev_samp: tomogram_voxel_spacings_stddev_samp_fields
  sum: tomogram_voxel_spacings_sum_fields
  var_pop: tomogram_voxel_spacings_var_pop_fields
  var_samp: tomogram_voxel_spacings_var_samp_fields
  variance: tomogram_voxel_spacings_variance_fields
}

"""
order by aggregate values of table "tomogram_voxel_spacings"
"""
input tomogram_voxel_spacings_aggregate_order_by {
  avg: tomogram_voxel_spacings_avg_order_by
  count: order_by
  max: tomogram_voxel_spacings_max_order_by
  min: tomogram_voxel_spacings_min_order_by
  stddev: tomogram_voxel_spacings_stddev_order_by
  stddev_pop: tomogram_voxel_spacings_stddev_pop_order_by
  stddev_samp: tomogram_voxel_spacings_stddev_samp_order_by
  sum: tomogram_voxel_spacings_sum_order_by
  var_pop: tomogram_voxel_spacings_var_pop_order_by
  var_samp: tomogram_voxel_spacings_var_samp_order_by
  variance: tomogram_voxel_spacings_variance_order_by
}

"""aggregate avg on columns"""
type tomogram_voxel_spacings_avg_fields {
  id: Float
  run_id: Float
  voxel_spacing: Float
}

"""
order by avg() on columns of table "tomogram_voxel_spacings"
"""
input tomogram_voxel_spacings_avg_order_by {
  id: order_by
  run_id: order_by
  voxel_spacing: order_by
}

"""
Boolean expression to filter rows from the table "tomogram_voxel_spacings". All fields are combined with a logical 'AND'.
"""
input tomogram_voxel_spacings_bool_exp {
  _and: [tomogram_voxel_spacings_bool_exp!]
  _not: tomogram_voxel_spacings_bool_exp
  _or: [tomogram_voxel_spacings_bool_exp!]
  annotations: annotations_bool_exp
  annotations_aggregate: annotations_aggregate_bool_exp
  https_prefix: String_comparison_exp
  id: Int_comparison_exp
  run: runs_bool_exp
  run_id: Int_comparison_exp
  s3_prefix: String_comparison_exp
  tomograms: tomograms_bool_exp
  tomograms_aggregate: tomograms_aggregate_bool_exp
  voxel_spacing: numeric_comparison_exp
}

"""aggregate max on columns"""
type tomogram_voxel_spacings_max_fields {
  https_prefix: String
  id: Int
  run_id: Int
  s3_prefix: String
  voxel_spacing: numeric
}

"""
order by max() on columns of table "tomogram_voxel_spacings"
"""
input tomogram_voxel_spacings_max_order_by {
  https_prefix: order_by
  id: order_by
  run_id: order_by
  s3_prefix: order_by
  voxel_spacing: order_by
}

"""aggregate min on columns"""
type tomogram_voxel_spacings_min_fields {
  https_prefix: String
  id: Int
  run_id: Int
  s3_prefix: String
  voxel_spacing: numeric
}

"""
order by min() on columns of table "tomogram_voxel_spacings"
"""
input tomogram_voxel_spacings_min_order_by {
  https_prefix: order_by
  id: order_by
  run_id: order_by
  s3_prefix: order_by
  voxel_spacing: order_by
}

"""Ordering options when selecting data from "tomogram_voxel_spacings"."""
input tomogram_voxel_spacings_order_by {
  annotations_aggregate: annotations_aggregate_order_by
  https_prefix: order_by
  id: order_by
  run: runs_order_by
  run_id: order_by
  s3_prefix: order_by
  tomograms_aggregate: tomograms_aggregate_order_by
  voxel_spacing: order_by
}

"""
select columns of table "tomogram_voxel_spacings"
"""
enum tomogram_voxel_spacings_select_column {
  """column name"""
  https_prefix

  """column name"""
  id

  """column name"""
  run_id

  """column name"""
  s3_prefix

  """column name"""
  voxel_spacing
}

"""aggregate stddev on columns"""
type tomogram_voxel_spacings_stddev_fields {
  id: Float
  run_id: Float
  voxel_spacing: Float
}

"""
order by stddev() on columns of table "tomogram_voxel_spacings"
"""
input tomogram_voxel_spacings_stddev_order_by {
  id: order_by
  run_id: order_by
  voxel_spacing: order_by
}

"""aggregate stddev_pop on columns"""
type tomogram_voxel_spacings_stddev_pop_fields {
  id: Float
  run_id: Float
  voxel_spacing: Float
}

"""
order by stddev_pop() on columns of table "tomogram_voxel_spacings"
"""
input tomogram_voxel_spacings_stddev_pop_order_by {
  id: order_by
  run_id: order_by
  voxel_spacing: order_by
}

"""aggregate stddev_samp on columns"""
type tomogram_voxel_spacings_stddev_samp_fields {
  id: Float
  run_id: Float
  voxel_spacing: Float
}

"""
order by stddev_samp() on columns of table "tomogram_voxel_spacings"
"""
input tomogram_voxel_spacings_stddev_samp_order_by {
  id: order_by
  run_id: order_by
  voxel_spacing: order_by
}

"""aggregate sum on columns"""
type tomogram_voxel_spacings_sum_fields {
  id: Int
  run_id: Int
  voxel_spacing: numeric
}

"""
order by sum() on columns of table "tomogram_voxel_spacings"
"""
input tomogram_voxel_spacings_sum_order_by {
  id: order_by
  run_id: order_by
  voxel_spacing: order_by
}

"""aggregate var_pop on columns"""
type tomogram_voxel_spacings_var_pop_fields {
  id: Float
  run_id: Float
  voxel_spacing: Float
}

"""
order by var_pop() on columns of table "tomogram_voxel_spacings"
"""
input tomogram_voxel_spacings_var_pop_order_by {
  id: order_by
  run_id: order_by
  voxel_spacing: order_by
}

"""aggregate var_samp on columns"""
type tomogram_voxel_spacings_var_samp_fields {
  id: Float
  run_id: Float
  voxel_spacing: Float
}

"""
order by var_samp() on columns of table "tomogram_voxel_spacings"
"""
input tomogram_voxel_spacings_var_samp_order_by {
  id: order_by
  run_id: order_by
  voxel_spacing: order_by
}

"""aggregate variance on columns"""
type tomogram_voxel_spacings_variance_fields {
  id: Float
  run_id: Float
  voxel_spacing: Float
}

"""
order by variance() on columns of table "tomogram_voxel_spacings"
"""
input tomogram_voxel_spacings_variance_order_by {
  id: order_by
  run_id: order_by
  voxel_spacing: order_by
}

"""information about the tomograms in the CryoET Data Portal"""
type tomograms {
  """
  The flip or rotation transformation of this author submitted tomogram is indicated here
  """
  affine_transformation_matrix: _numeric

  """An array relationship"""
  authors(
    """distinct select on columns"""
    distinct_on: [tomogram_authors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomogram_authors_order_by!]

    """filter the rows returned"""
    where: tomogram_authors_bool_exp
  ): [tomogram_authors!]!

  """An aggregate relationship"""
  authors_aggregate(
    """distinct select on columns"""
    distinct_on: [tomogram_authors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tomogram_authors_order_by!]

    """filter the rows returned"""
    where: tomogram_authors_bool_exp
  ): tomogram_authors_aggregate!
  ctf_corrected: Boolean

  """id of the associated deposition."""
  deposition_id: Int

  """
  Fiducial Alignment status: True = aligned with fiducial False = aligned without fiducial
  """
  fiducial_alignment_status: String!

  """https path to this tomogram in MRC format (no scaling)"""
  https_mrc_scale0: String!

  """HTTPS path to the this multiscale omezarr tomogram"""
  https_omezarr_dir: String!

  """Numeric identifier for this tomogram (this may change!)"""
  id: Int!

  """
  Is this tomogram considered the canonical tomogram for the run experiment? True=Yes
  """
  is_canonical: Boolean

  """URL for the thumbnail of key photo"""
  key_photo_thumbnail_url: String

  """URL for the key photo"""
  key_photo_url: String

  """Short name for this tomogram"""
  name: String!

  """the compact json of neuroglancer config"""
  neuroglancer_config: String

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: Int!

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: Int!

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: Int!

  """Describe additional processing used to derive the tomogram"""
  processing: String!

  """Processing software used to derive the tomogram"""
  processing_software: String

  """Describe reconstruction method (Weighted backprojection, SART, SIRT)"""
  reconstruction_method: String!

  """Name of software used for reconstruction"""
  reconstruction_software: String!

  """S3 path to this tomogram in MRC format (no scaling)"""
  s3_mrc_scale0: String!

  """S3 path to the this multiscale omezarr tomogram"""
  s3_omezarr_dir: String!

  """comma separated x,y,z dimensions of the unscaled tomogram"""
  scale0_dimensions: String!

  """comma separated x,y,z dimensions of the scale1 tomogram"""
  scale1_dimensions: String!

  """comma separated x,y,z dimensions of the scale2 tomogram"""
  scale2_dimensions: String!

  """Number of pixels in the 3D data fast axis"""
  size_x: Int!

  """Number of pixels in the 3D data medium axis"""
  size_y: Int!

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: Int!

  """An object relationship"""
  tomogram_type: tomogram_type

  """
  Version of tomogram using the same software and post-processing. Version of tomogram using the same software and post-processing. This will be presented as the latest version
  """
  tomogram_version: String!

  """An object relationship"""
  tomogram_voxel_spacing: tomogram_voxel_spacings
  tomogram_voxel_spacing_id: Int
  type: tomogram_type_enum

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: numeric!
}

"""
aggregated selection of "tomograms"
"""
type tomograms_aggregate {
  aggregate: tomograms_aggregate_fields
  nodes: [tomograms!]!
}

input tomograms_aggregate_bool_exp {
  bool_and: tomograms_aggregate_bool_exp_bool_and
  bool_or: tomograms_aggregate_bool_exp_bool_or
  count: tomograms_aggregate_bool_exp_count
}

input tomograms_aggregate_bool_exp_bool_and {
  arguments: tomograms_select_column_tomograms_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: tomograms_bool_exp
  predicate: Boolean_comparison_exp!
}

input tomograms_aggregate_bool_exp_bool_or {
  arguments: tomograms_select_column_tomograms_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: tomograms_bool_exp
  predicate: Boolean_comparison_exp!
}

input tomograms_aggregate_bool_exp_count {
  arguments: [tomograms_select_column!]
  distinct: Boolean
  filter: tomograms_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "tomograms"
"""
type tomograms_aggregate_fields {
  avg: tomograms_avg_fields
  count(columns: [tomograms_select_column!], distinct: Boolean): Int!
  max: tomograms_max_fields
  min: tomograms_min_fields
  stddev: tomograms_stddev_fields
  stddev_pop: tomograms_stddev_pop_fields
  stddev_samp: tomograms_stddev_samp_fields
  sum: tomograms_sum_fields
  var_pop: tomograms_var_pop_fields
  var_samp: tomograms_var_samp_fields
  variance: tomograms_variance_fields
}

"""
order by aggregate values of table "tomograms"
"""
input tomograms_aggregate_order_by {
  avg: tomograms_avg_order_by
  count: order_by
  max: tomograms_max_order_by
  min: tomograms_min_order_by
  stddev: tomograms_stddev_order_by
  stddev_pop: tomograms_stddev_pop_order_by
  stddev_samp: tomograms_stddev_samp_order_by
  sum: tomograms_sum_order_by
  var_pop: tomograms_var_pop_order_by
  var_samp: tomograms_var_samp_order_by
  variance: tomograms_variance_order_by
}

"""aggregate avg on columns"""
type tomograms_avg_fields {
  """id of the associated deposition."""
  deposition_id: Float

  """Numeric identifier for this tomogram (this may change!)"""
  id: Float

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: Float

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: Float

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: Float

  """Number of pixels in the 3D data fast axis"""
  size_x: Float

  """Number of pixels in the 3D data medium axis"""
  size_y: Float

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: Float
  tomogram_voxel_spacing_id: Float

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: Float
}

"""
order by avg() on columns of table "tomograms"
"""
input tomograms_avg_order_by {
  """id of the associated deposition."""
  deposition_id: order_by

  """Numeric identifier for this tomogram (this may change!)"""
  id: order_by

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: order_by

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: order_by

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: order_by

  """Number of pixels in the 3D data fast axis"""
  size_x: order_by

  """Number of pixels in the 3D data medium axis"""
  size_y: order_by

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: order_by
  tomogram_voxel_spacing_id: order_by

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: order_by
}

"""
Boolean expression to filter rows from the table "tomograms". All fields are combined with a logical 'AND'.
"""
input tomograms_bool_exp {
  _and: [tomograms_bool_exp!]
  _not: tomograms_bool_exp
  _or: [tomograms_bool_exp!]
  affine_transformation_matrix: _numeric_comparison_exp
  authors: tomogram_authors_bool_exp
  authors_aggregate: tomogram_authors_aggregate_bool_exp
  ctf_corrected: Boolean_comparison_exp
  deposition_id: Int_comparison_exp
  fiducial_alignment_status: String_comparison_exp
  https_mrc_scale0: String_comparison_exp
  https_omezarr_dir: String_comparison_exp
  id: Int_comparison_exp
  is_canonical: Boolean_comparison_exp
  key_photo_thumbnail_url: String_comparison_exp
  key_photo_url: String_comparison_exp
  name: String_comparison_exp
  neuroglancer_config: String_comparison_exp
  offset_x: Int_comparison_exp
  offset_y: Int_comparison_exp
  offset_z: Int_comparison_exp
  processing: String_comparison_exp
  processing_software: String_comparison_exp
  reconstruction_method: String_comparison_exp
  reconstruction_software: String_comparison_exp
  s3_mrc_scale0: String_comparison_exp
  s3_omezarr_dir: String_comparison_exp
  scale0_dimensions: String_comparison_exp
  scale1_dimensions: String_comparison_exp
  scale2_dimensions: String_comparison_exp
  size_x: Int_comparison_exp
  size_y: Int_comparison_exp
  size_z: Int_comparison_exp
  tomogram_type: tomogram_type_bool_exp
  tomogram_version: String_comparison_exp
  tomogram_voxel_spacing: tomogram_voxel_spacings_bool_exp
  tomogram_voxel_spacing_id: Int_comparison_exp
  type: tomogram_type_enum_comparison_exp
  voxel_spacing: numeric_comparison_exp
}

"""aggregate max on columns"""
type tomograms_max_fields {
  """id of the associated deposition."""
  deposition_id: Int

  """
  Fiducial Alignment status: True = aligned with fiducial False = aligned without fiducial
  """
  fiducial_alignment_status: String

  """https path to this tomogram in MRC format (no scaling)"""
  https_mrc_scale0: String

  """HTTPS path to the this multiscale omezarr tomogram"""
  https_omezarr_dir: String

  """Numeric identifier for this tomogram (this may change!)"""
  id: Int

  """URL for the thumbnail of key photo"""
  key_photo_thumbnail_url: String

  """URL for the key photo"""
  key_photo_url: String

  """Short name for this tomogram"""
  name: String

  """the compact json of neuroglancer config"""
  neuroglancer_config: String

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: Int

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: Int

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: Int

  """Describe additional processing used to derive the tomogram"""
  processing: String

  """Processing software used to derive the tomogram"""
  processing_software: String

  """Describe reconstruction method (Weighted backprojection, SART, SIRT)"""
  reconstruction_method: String

  """Name of software used for reconstruction"""
  reconstruction_software: String

  """S3 path to this tomogram in MRC format (no scaling)"""
  s3_mrc_scale0: String

  """S3 path to the this multiscale omezarr tomogram"""
  s3_omezarr_dir: String

  """comma separated x,y,z dimensions of the unscaled tomogram"""
  scale0_dimensions: String

  """comma separated x,y,z dimensions of the scale1 tomogram"""
  scale1_dimensions: String

  """comma separated x,y,z dimensions of the scale2 tomogram"""
  scale2_dimensions: String

  """Number of pixels in the 3D data fast axis"""
  size_x: Int

  """Number of pixels in the 3D data medium axis"""
  size_y: Int

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: Int

  """
  Version of tomogram using the same software and post-processing. Version of tomogram using the same software and post-processing. This will be presented as the latest version
  """
  tomogram_version: String
  tomogram_voxel_spacing_id: Int

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: numeric
}

"""
order by max() on columns of table "tomograms"
"""
input tomograms_max_order_by {
  """id of the associated deposition."""
  deposition_id: order_by

  """
  Fiducial Alignment status: True = aligned with fiducial False = aligned without fiducial
  """
  fiducial_alignment_status: order_by

  """https path to this tomogram in MRC format (no scaling)"""
  https_mrc_scale0: order_by

  """HTTPS path to the this multiscale omezarr tomogram"""
  https_omezarr_dir: order_by

  """Numeric identifier for this tomogram (this may change!)"""
  id: order_by

  """URL for the thumbnail of key photo"""
  key_photo_thumbnail_url: order_by

  """URL for the key photo"""
  key_photo_url: order_by

  """Short name for this tomogram"""
  name: order_by

  """the compact json of neuroglancer config"""
  neuroglancer_config: order_by

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: order_by

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: order_by

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: order_by

  """Describe additional processing used to derive the tomogram"""
  processing: order_by

  """Processing software used to derive the tomogram"""
  processing_software: order_by

  """Describe reconstruction method (Weighted backprojection, SART, SIRT)"""
  reconstruction_method: order_by

  """Name of software used for reconstruction"""
  reconstruction_software: order_by

  """S3 path to this tomogram in MRC format (no scaling)"""
  s3_mrc_scale0: order_by

  """S3 path to the this multiscale omezarr tomogram"""
  s3_omezarr_dir: order_by

  """comma separated x,y,z dimensions of the unscaled tomogram"""
  scale0_dimensions: order_by

  """comma separated x,y,z dimensions of the scale1 tomogram"""
  scale1_dimensions: order_by

  """comma separated x,y,z dimensions of the scale2 tomogram"""
  scale2_dimensions: order_by

  """Number of pixels in the 3D data fast axis"""
  size_x: order_by

  """Number of pixels in the 3D data medium axis"""
  size_y: order_by

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: order_by

  """
  Version of tomogram using the same software and post-processing. Version of tomogram using the same software and post-processing. This will be presented as the latest version
  """
  tomogram_version: order_by
  tomogram_voxel_spacing_id: order_by

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: order_by
}

"""aggregate min on columns"""
type tomograms_min_fields {
  """id of the associated deposition."""
  deposition_id: Int

  """
  Fiducial Alignment status: True = aligned with fiducial False = aligned without fiducial
  """
  fiducial_alignment_status: String

  """https path to this tomogram in MRC format (no scaling)"""
  https_mrc_scale0: String

  """HTTPS path to the this multiscale omezarr tomogram"""
  https_omezarr_dir: String

  """Numeric identifier for this tomogram (this may change!)"""
  id: Int

  """URL for the thumbnail of key photo"""
  key_photo_thumbnail_url: String

  """URL for the key photo"""
  key_photo_url: String

  """Short name for this tomogram"""
  name: String

  """the compact json of neuroglancer config"""
  neuroglancer_config: String

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: Int

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: Int

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: Int

  """Describe additional processing used to derive the tomogram"""
  processing: String

  """Processing software used to derive the tomogram"""
  processing_software: String

  """Describe reconstruction method (Weighted backprojection, SART, SIRT)"""
  reconstruction_method: String

  """Name of software used for reconstruction"""
  reconstruction_software: String

  """S3 path to this tomogram in MRC format (no scaling)"""
  s3_mrc_scale0: String

  """S3 path to the this multiscale omezarr tomogram"""
  s3_omezarr_dir: String

  """comma separated x,y,z dimensions of the unscaled tomogram"""
  scale0_dimensions: String

  """comma separated x,y,z dimensions of the scale1 tomogram"""
  scale1_dimensions: String

  """comma separated x,y,z dimensions of the scale2 tomogram"""
  scale2_dimensions: String

  """Number of pixels in the 3D data fast axis"""
  size_x: Int

  """Number of pixels in the 3D data medium axis"""
  size_y: Int

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: Int

  """
  Version of tomogram using the same software and post-processing. Version of tomogram using the same software and post-processing. This will be presented as the latest version
  """
  tomogram_version: String
  tomogram_voxel_spacing_id: Int

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: numeric
}

"""
order by min() on columns of table "tomograms"
"""
input tomograms_min_order_by {
  """id of the associated deposition."""
  deposition_id: order_by

  """
  Fiducial Alignment status: True = aligned with fiducial False = aligned without fiducial
  """
  fiducial_alignment_status: order_by

  """https path to this tomogram in MRC format (no scaling)"""
  https_mrc_scale0: order_by

  """HTTPS path to the this multiscale omezarr tomogram"""
  https_omezarr_dir: order_by

  """Numeric identifier for this tomogram (this may change!)"""
  id: order_by

  """URL for the thumbnail of key photo"""
  key_photo_thumbnail_url: order_by

  """URL for the key photo"""
  key_photo_url: order_by

  """Short name for this tomogram"""
  name: order_by

  """the compact json of neuroglancer config"""
  neuroglancer_config: order_by

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: order_by

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: order_by

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: order_by

  """Describe additional processing used to derive the tomogram"""
  processing: order_by

  """Processing software used to derive the tomogram"""
  processing_software: order_by

  """Describe reconstruction method (Weighted backprojection, SART, SIRT)"""
  reconstruction_method: order_by

  """Name of software used for reconstruction"""
  reconstruction_software: order_by

  """S3 path to this tomogram in MRC format (no scaling)"""
  s3_mrc_scale0: order_by

  """S3 path to the this multiscale omezarr tomogram"""
  s3_omezarr_dir: order_by

  """comma separated x,y,z dimensions of the unscaled tomogram"""
  scale0_dimensions: order_by

  """comma separated x,y,z dimensions of the scale1 tomogram"""
  scale1_dimensions: order_by

  """comma separated x,y,z dimensions of the scale2 tomogram"""
  scale2_dimensions: order_by

  """Number of pixels in the 3D data fast axis"""
  size_x: order_by

  """Number of pixels in the 3D data medium axis"""
  size_y: order_by

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: order_by

  """
  Version of tomogram using the same software and post-processing. Version of tomogram using the same software and post-processing. This will be presented as the latest version
  """
  tomogram_version: order_by
  tomogram_voxel_spacing_id: order_by

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: order_by
}

"""Ordering options when selecting data from "tomograms"."""
input tomograms_order_by {
  affine_transformation_matrix: order_by
  authors_aggregate: tomogram_authors_aggregate_order_by
  ctf_corrected: order_by
  deposition_id: order_by
  fiducial_alignment_status: order_by
  https_mrc_scale0: order_by
  https_omezarr_dir: order_by
  id: order_by
  is_canonical: order_by
  key_photo_thumbnail_url: order_by
  key_photo_url: order_by
  name: order_by
  neuroglancer_config: order_by
  offset_x: order_by
  offset_y: order_by
  offset_z: order_by
  processing: order_by
  processing_software: order_by
  reconstruction_method: order_by
  reconstruction_software: order_by
  s3_mrc_scale0: order_by
  s3_omezarr_dir: order_by
  scale0_dimensions: order_by
  scale1_dimensions: order_by
  scale2_dimensions: order_by
  size_x: order_by
  size_y: order_by
  size_z: order_by
  tomogram_type: tomogram_type_order_by
  tomogram_version: order_by
  tomogram_voxel_spacing: tomogram_voxel_spacings_order_by
  tomogram_voxel_spacing_id: order_by
  type: order_by
  voxel_spacing: order_by
}

"""
select columns of table "tomograms"
"""
enum tomograms_select_column {
  """column name"""
  affine_transformation_matrix

  """column name"""
  ctf_corrected

  """column name"""
  deposition_id

  """column name"""
  fiducial_alignment_status

  """column name"""
  https_mrc_scale0

  """column name"""
  https_omezarr_dir

  """column name"""
  id

  """column name"""
  is_canonical

  """column name"""
  key_photo_thumbnail_url

  """column name"""
  key_photo_url

  """column name"""
  name

  """column name"""
  neuroglancer_config

  """column name"""
  offset_x

  """column name"""
  offset_y

  """column name"""
  offset_z

  """column name"""
  processing

  """column name"""
  processing_software

  """column name"""
  reconstruction_method

  """column name"""
  reconstruction_software

  """column name"""
  s3_mrc_scale0

  """column name"""
  s3_omezarr_dir

  """column name"""
  scale0_dimensions

  """column name"""
  scale1_dimensions

  """column name"""
  scale2_dimensions

  """column name"""
  size_x

  """column name"""
  size_y

  """column name"""
  size_z

  """column name"""
  tomogram_version

  """column name"""
  tomogram_voxel_spacing_id

  """column name"""
  type

  """column name"""
  voxel_spacing
}

"""
select "tomograms_aggregate_bool_exp_bool_and_arguments_columns" columns of table "tomograms"
"""
enum tomograms_select_column_tomograms_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  ctf_corrected

  """column name"""
  is_canonical
}

"""
select "tomograms_aggregate_bool_exp_bool_or_arguments_columns" columns of table "tomograms"
"""
enum tomograms_select_column_tomograms_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  ctf_corrected

  """column name"""
  is_canonical
}

"""aggregate stddev on columns"""
type tomograms_stddev_fields {
  """id of the associated deposition."""
  deposition_id: Float

  """Numeric identifier for this tomogram (this may change!)"""
  id: Float

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: Float

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: Float

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: Float

  """Number of pixels in the 3D data fast axis"""
  size_x: Float

  """Number of pixels in the 3D data medium axis"""
  size_y: Float

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: Float
  tomogram_voxel_spacing_id: Float

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: Float
}

"""
order by stddev() on columns of table "tomograms"
"""
input tomograms_stddev_order_by {
  """id of the associated deposition."""
  deposition_id: order_by

  """Numeric identifier for this tomogram (this may change!)"""
  id: order_by

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: order_by

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: order_by

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: order_by

  """Number of pixels in the 3D data fast axis"""
  size_x: order_by

  """Number of pixels in the 3D data medium axis"""
  size_y: order_by

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: order_by
  tomogram_voxel_spacing_id: order_by

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: order_by
}

"""aggregate stddev_pop on columns"""
type tomograms_stddev_pop_fields {
  """id of the associated deposition."""
  deposition_id: Float

  """Numeric identifier for this tomogram (this may change!)"""
  id: Float

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: Float

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: Float

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: Float

  """Number of pixels in the 3D data fast axis"""
  size_x: Float

  """Number of pixels in the 3D data medium axis"""
  size_y: Float

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: Float
  tomogram_voxel_spacing_id: Float

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: Float
}

"""
order by stddev_pop() on columns of table "tomograms"
"""
input tomograms_stddev_pop_order_by {
  """id of the associated deposition."""
  deposition_id: order_by

  """Numeric identifier for this tomogram (this may change!)"""
  id: order_by

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: order_by

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: order_by

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: order_by

  """Number of pixels in the 3D data fast axis"""
  size_x: order_by

  """Number of pixels in the 3D data medium axis"""
  size_y: order_by

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: order_by
  tomogram_voxel_spacing_id: order_by

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: order_by
}

"""aggregate stddev_samp on columns"""
type tomograms_stddev_samp_fields {
  """id of the associated deposition."""
  deposition_id: Float

  """Numeric identifier for this tomogram (this may change!)"""
  id: Float

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: Float

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: Float

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: Float

  """Number of pixels in the 3D data fast axis"""
  size_x: Float

  """Number of pixels in the 3D data medium axis"""
  size_y: Float

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: Float
  tomogram_voxel_spacing_id: Float

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: Float
}

"""
order by stddev_samp() on columns of table "tomograms"
"""
input tomograms_stddev_samp_order_by {
  """id of the associated deposition."""
  deposition_id: order_by

  """Numeric identifier for this tomogram (this may change!)"""
  id: order_by

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: order_by

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: order_by

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: order_by

  """Number of pixels in the 3D data fast axis"""
  size_x: order_by

  """Number of pixels in the 3D data medium axis"""
  size_y: order_by

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: order_by
  tomogram_voxel_spacing_id: order_by

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: order_by
}

"""aggregate sum on columns"""
type tomograms_sum_fields {
  """id of the associated deposition."""
  deposition_id: Int

  """Numeric identifier for this tomogram (this may change!)"""
  id: Int

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: Int

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: Int

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: Int

  """Number of pixels in the 3D data fast axis"""
  size_x: Int

  """Number of pixels in the 3D data medium axis"""
  size_y: Int

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: Int
  tomogram_voxel_spacing_id: Int

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: numeric
}

"""
order by sum() on columns of table "tomograms"
"""
input tomograms_sum_order_by {
  """id of the associated deposition."""
  deposition_id: order_by

  """Numeric identifier for this tomogram (this may change!)"""
  id: order_by

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: order_by

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: order_by

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: order_by

  """Number of pixels in the 3D data fast axis"""
  size_x: order_by

  """Number of pixels in the 3D data medium axis"""
  size_y: order_by

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: order_by
  tomogram_voxel_spacing_id: order_by

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: order_by
}

"""aggregate var_pop on columns"""
type tomograms_var_pop_fields {
  """id of the associated deposition."""
  deposition_id: Float

  """Numeric identifier for this tomogram (this may change!)"""
  id: Float

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: Float

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: Float

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: Float

  """Number of pixels in the 3D data fast axis"""
  size_x: Float

  """Number of pixels in the 3D data medium axis"""
  size_y: Float

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: Float
  tomogram_voxel_spacing_id: Float

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: Float
}

"""
order by var_pop() on columns of table "tomograms"
"""
input tomograms_var_pop_order_by {
  """id of the associated deposition."""
  deposition_id: order_by

  """Numeric identifier for this tomogram (this may change!)"""
  id: order_by

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: order_by

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: order_by

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: order_by

  """Number of pixels in the 3D data fast axis"""
  size_x: order_by

  """Number of pixels in the 3D data medium axis"""
  size_y: order_by

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: order_by
  tomogram_voxel_spacing_id: order_by

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: order_by
}

"""aggregate var_samp on columns"""
type tomograms_var_samp_fields {
  """id of the associated deposition."""
  deposition_id: Float

  """Numeric identifier for this tomogram (this may change!)"""
  id: Float

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: Float

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: Float

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: Float

  """Number of pixels in the 3D data fast axis"""
  size_x: Float

  """Number of pixels in the 3D data medium axis"""
  size_y: Float

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: Float
  tomogram_voxel_spacing_id: Float

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: Float
}

"""
order by var_samp() on columns of table "tomograms"
"""
input tomograms_var_samp_order_by {
  """id of the associated deposition."""
  deposition_id: order_by

  """Numeric identifier for this tomogram (this may change!)"""
  id: order_by

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: order_by

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: order_by

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: order_by

  """Number of pixels in the 3D data fast axis"""
  size_x: order_by

  """Number of pixels in the 3D data medium axis"""
  size_y: order_by

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: order_by
  tomogram_voxel_spacing_id: order_by

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: order_by
}

"""aggregate variance on columns"""
type tomograms_variance_fields {
  """id of the associated deposition."""
  deposition_id: Float

  """Numeric identifier for this tomogram (this may change!)"""
  id: Float

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: Float

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: Float

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: Float

  """Number of pixels in the 3D data fast axis"""
  size_x: Float

  """Number of pixels in the 3D data medium axis"""
  size_y: Float

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: Float
  tomogram_voxel_spacing_id: Float

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: Float
}

"""
order by variance() on columns of table "tomograms"
"""
input tomograms_variance_order_by {
  """id of the associated deposition."""
  deposition_id: order_by

  """Numeric identifier for this tomogram (this may change!)"""
  id: order_by

  """x offset data relative to the canonical tomogram in pixels"""
  offset_x: order_by

  """y offset data relative to the canonical tomogram in pixels"""
  offset_y: order_by

  """z offset data relative to the canonical tomogram in pixels"""
  offset_z: order_by

  """Number of pixels in the 3D data fast axis"""
  size_x: order_by

  """Number of pixels in the 3D data medium axis"""
  size_y: order_by

  """
  Number of pixels in the 3D data slow axis.  This is the image projection direction at zero stage tilt
  """
  size_z: order_by
  tomogram_voxel_spacing_id: order_by

  """Voxel spacing equal in all three axes in angstroms"""
  voxel_spacing: order_by
}
