on:
  workflow_call:
    inputs:
      browsers:
        type: string
        default: '["chromium"]'

      environment:
        required: true
        type: string

    secrets:
      E2E_CONFIG:
        required: true

jobs:
  e2e-setup:
    name: E2E Setup
    runs-on: macos-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.8.x

      - name: Install PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 8.10.5
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies with PNPM
        run: pnpm install --frozen-lockfile
        working-directory: frontend

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Installing playwright browsers
        run: pnpm e2e:install-browsers
        working-directory: frontend/packages/data-portal

      - name: Setting up local build cache
        uses: actions/cache@v3
        if: inputs.environment == 'local'
        with:
          path: |
            frontend/packages/data-portal/build
            frontend/packages/data-portal/public/build
          key: local-build-${{ hashFiles('frontend/packages/data-portal/app') }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Build frontend for local testing
        run: pnpm build
        if: inputs.environment == 'local'
        working-directory: frontend/packages/data-portal

  frontend-e2e-tests:
    strategy:
      matrix:
        browser: ${{ fromJson(inputs.browsers) }}
        shardCurrent: [1, 2, 3, 4, 5]
        shardTotal: [5]

    concurrency:
      group: frontend-e2e-${{ github.ref }}-${{ matrix.browser }}-${{ matrix.shardCurrent }}-${{ matrix.shardTotal}}
      cancel-in-progress: true

    name: ${{ matrix.browser }} ${{ matrix.shardCurrent}}/${{  matrix.shardTotal }}
    # Using macos runner temporarily because ubuntu runner has issues with
    # playwright testing for when the download dialog closes
    # TODO investigate why ubuntu runner tests fail
    runs-on: macos-latest
    environment: ${{ inputs.environment }}
    needs: e2e-setup
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.8.x

      - name: Install PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 8.10.5
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies with PNPM
        run: pnpm install --frozen-lockfile
        working-directory: frontend

      - name: Load cached playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Installing playwright browsers
        run: pnpm e2e:install-browsers
        working-directory: frontend/packages/data-portal

      - name: Load cached local build
        uses: actions/cache@v3
        if: inputs.environment == 'local'
        with:
          path: |
            frontend/packages/data-portal/build
            frontend/packages/data-portal/public/build
          key: local-build-${{ hashFiles('frontend/packages/data-portal/app') }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Build GraphQL Types
        run: pnpm build:codegen
        working-directory: frontend/packages/data-portal

      - name: Start server on port 8080
        run: pnpm start &
        if: inputs.environment == 'local'
        working-directory: frontend/packages/data-portal
        env:
          API_URL: ${{ vars.API_URL }}
          API_URL_V2: ${{ vars.API_URL_V2 }}
          ENV: ${{ inputs.environment }}

      - name: Run E2E tests
        run: |
          sleep 15
          pnpm e2e --shard ${{ matrix.shardCurrent }}/${{ matrix.shardTotal }}
        working-directory: frontend/packages/data-portal
        env:
          API_URL: ${{ vars.API_URL }}
          API_URL_V2: ${{ vars.API_URL_V2 }}
          E2E_BROWSER: ${{ matrix.browser }}
          E2E_CONFIG: ${{ secrets.E2E_CONFIG }}
          CI: true

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: html-report-${{ matrix.browser }}-${{ matrix.shardCurrent }}-${{ matrix.shardTotal }}
          path: frontend/packages/data-portal/playwright-report/
          retention-days: 1
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: chromatic-report-${{ matrix.browser }}-${{ matrix.shardCurrent }}-${{ matrix.shardTotal }}
          path: frontend/packages/data-portal/test-results/
          retention-days: 1
  chromatic:
    name: Run Chromatic
    needs: frontend-e2e-tests
    runs-on: macos-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 22.12.0
      - name: Install PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 8.10.5
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: frontend
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
        with:
          path: frontend/packages/data-portal/test-results/
          pattern: chromatic-report-*
          merge-multiple: true
      - name: Run Chromatic
        uses: chromaui/action@latest
        with:
          playwright: true
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: frontend/packages/data-portal
